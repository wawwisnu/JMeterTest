<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">2</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">fx-node-1-staging.nestle.koltitrace.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="eventAddEntity" elementType="Argument">
              <stringProp name="Argument.name">eventAddEntity</stringProp>
              <stringProp name="Argument.value">${__RandomString(11,asdfghjklASDFGHJKL)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventAddCertification" elementType="Argument">
              <stringProp name="Argument.name">eventAddCertification</stringProp>
              <stringProp name="Argument.value">${__RandomString(11,zxcvbnmZXCVBNM)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventAddPeople" elementType="Argument">
              <stringProp name="Argument.name">eventAddPeople</stringProp>
              <stringProp name="Argument.value">${__RandomString(11,qwertgbQWERTYGHB)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventAddActionPlan" elementType="Argument">
              <stringProp name="Argument.name">eventAddActionPlan</stringProp>
              <stringProp name="Argument.value">${__RandomString(11,poiuyhgvcPOIUYHGV)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventAddPlot" elementType="Argument">
              <stringProp name="Argument.name">eventAddPlot</stringProp>
              <stringProp name="Argument.value">${__RandomString(11,xcgyujkmZXCVGYUJM)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventAddAdoptionAsses" elementType="Argument">
              <stringProp name="Argument.name">eventAddAdoptionAsses</stringProp>
              <stringProp name="Argument.value">${__RandomString(11,qsxcvbhuQWSDCVGHY)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventBasicFarmInf" elementType="Argument">
              <stringProp name="Argument.name">eventBasicFarmInf</stringProp>
              <stringProp name="Argument.value">${__RandomString(11,lijhbvfLIUJHBVFASF)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventAddGroup" elementType="Argument">
              <stringProp name="Argument.name">eventAddGroup</stringProp>
              <stringProp name="Argument.value">${__RandomString(11,gfdsazxhHGFDSAZXCVB)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventAddPlantlets" elementType="Argument">
              <stringProp name="Argument.name">eventAddPlantlets</stringProp>
              <stringProp name="Argument.value">${__RandomString(11,wedfvbhuWDFVBHU)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventAddInteraction" elementType="Argument">
              <stringProp name="Argument.name">eventAddInteraction</stringProp>
              <stringProp name="Argument.value">${__RandomString(11,mdasygfvMJUYGVUH)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventAddTraining" elementType="Argument">
              <stringProp name="Argument.name">eventAddTraining</stringProp>
              <stringProp name="Argument.value">${__RandomString(11,zserfvbZSERTFGBN)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="participantUid1" elementType="Argument">
              <stringProp name="Argument.name">participantUid1</stringProp>
              <stringProp name="Argument.value">${__RandomString(11,azsxcvbhjAZXCVBGHJ)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="participantUid2" elementType="Argument">
              <stringProp name="Argument.name">participantUid2</stringProp>
              <stringProp name="Argument.value">${__RandomString(11,LKMNBVFlkmnbvfjw)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="farmerName" elementType="Argument">
              <stringProp name="Argument.name">farmerName</stringProp>
              <stringProp name="Argument.value">petani ${__time(yyyyMMddhhmmss)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventAddNescafeEarWar" elementType="Argument">
              <stringProp name="Argument.name">eventAddNescafeEarWar</stringProp>
              <stringProp name="Argument.value">${__RandomString(11,rfghbnmkoRGHNMKO)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventAddM&amp;ECoSo2020" elementType="Argument">
              <stringProp name="Argument.name">eventAddM&amp;ECoSo2020</stringProp>
              <stringProp name="Argument.value">${__RandomString(11,uytrfvgbUYTRFDCVB)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventAddM&amp;EPlanlets2020" elementType="Argument">
              <stringProp name="Argument.name">eventAddM&amp;EPlanlets2020</stringProp>
              <stringProp name="Argument.value">${__RandomString(11,okjnbgfOKMNBGF)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventAddFBSAdoptionAsses" elementType="Argument">
              <stringProp name="Argument.name">eventAddFBSAdoptionAsses</stringProp>
              <stringProp name="Argument.value">${__RandomString(11,zserftgbZSDERTGB)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventAddRegenAgriFarm" elementType="Argument">
              <stringProp name="Argument.name">eventAddRegenAgriFarm</stringProp>
              <stringProp name="Argument.value">${__RandomString(11,efvbhuiERFVBHJUI)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventAddMEGenFam2020" elementType="Argument">
              <stringProp name="Argument.name">eventAddMEGenFam2020</stringProp>
              <stringProp name="Argument.value">${__RandomString(11,poijhbvPOKJHBV)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventAddCy24CPro2020" elementType="Argument">
              <stringProp name="Argument.name">eventAddCy24CPro2020</stringProp>
              <stringProp name="Argument.value">${__RandomString(11,asdfghjklASDFGHJKL)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventAddCy14CPro2020" elementType="Argument">
              <stringProp name="Argument.name">eventAddCy14CPro2020</stringProp>
              <stringProp name="Argument.value">${__RandomString(11,nbgfredszNHGTRDSXZ)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventAddCy34CPro2020" elementType="Argument">
              <stringProp name="Argument.name">eventAddCy34CPro2020</stringProp>
              <stringProp name="Argument.value">${__RandomString(11,thnmkloTYHNMKO)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventAddFATCoffeever2" elementType="Argument">
              <stringProp name="Argument.name">eventAddFATCoffeever2</stringProp>
              <stringProp name="Argument.value">${__RandomString(11,plkmnbgPLKMNBG)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventAddAllCropVer2" elementType="Argument">
              <stringProp name="Argument.name">eventAddAllCropVer2</stringProp>
              <stringProp name="Argument.value">${__RandomString(11,zxsdrtghnZXDRTYHN)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventAddAllCrop" elementType="Argument">
              <stringProp name="Argument.name">eventAddAllCrop</stringProp>
              <stringProp name="Argument.value">${__RandomString(11,mjhytrdxMJYTFCX)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventAddFarmInfAllCrop" elementType="Argument">
              <stringProp name="Argument.name">eventAddFarmInfAllCrop</stringProp>
              <stringProp name="Argument.value">${__RandomString(11,rfghbnmkoRGHNMKO)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventAddCropHide" elementType="Argument">
              <stringProp name="Argument.name">eventAddCropHide</stringProp>
              <stringProp name="Argument.value">${__RandomString(11,gfdsazxhHGFDSAZXCVB)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventAddAnimals" elementType="Argument">
              <stringProp name="Argument.name">eventAddAnimals</stringProp>
              <stringProp name="Argument.value">${__RandomString(11,qsxcvbhuQWSDCVGHY)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="participantUid" elementType="Argument">
              <stringProp name="Argument.name">participantUid</stringProp>
              <stringProp name="Argument.value">${__RandomString(11,thnmkloTYHNMKO)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="timestamp" elementType="Argument">
              <stringProp name="Argument.name">timestamp</stringProp>
              <stringProp name="Argument.value">${__time()}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Login" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;username&quot; : &quot;staging.nescafe&quot;,&#xd;
    &quot;password&quot; : &quot;Password1234!&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">true</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="IdToken" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">IdToken</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.IdToken</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="User setting" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
          <stringProp name="TestPlan.comments">disable karena masih error</stringProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">trace-id</stringProp>
                <stringProp name="Header.value">arloKoiteD2l!2e0tTsmeeNc1</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">application-id</stringProp>
                <stringProp name="Header.value">i!re0e2aat2FvGtmN1a</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">token</stringProp>
                <stringProp name="Header.value">${IdToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name"></stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="User setting" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api-traceability-nestle-demo.supplychaintrace.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">user/setting</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings"/>
              <stringProp name="Assertion.custom_message">200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Content" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
          <stringProp name="TestPlan.comments">disable karena masih error</stringProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Basic c3lzYXBwOkFwaVdTMjAxMyE=</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="News" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;data&quot;: [&#xd;
        {&#xd;
            &quot;type&quot;: &quot;user&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;language&quot;: &quot;Indonesia&quot;,&#xd;
                &quot;partnerid&quot;: &quot;5&quot;,&#xd;
                &quot;appname&quot;: &quot;farmxtension&quot;&#xd;
            }&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/farmer-apps/news</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Manual" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;data&quot;: [&#xd;
        {&#xd;
            &quot;type&quot;: &quot;user&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;language&quot;: &quot;Indonesia&quot;,&#xd;
                &quot;partnerid&quot;: &quot;5&quot;,&#xd;
                &quot;appname&quot;: &quot;farmxtension&quot;&#xd;
            }&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/farmer-apps/manual</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings"/>
              <stringProp name="Assertion.custom_message">200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Send to mobile" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;data&quot;: [&#xd;
        {&#xd;
            &quot;type&quot;: &quot;user&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;language&quot;: &quot;Indonesia&quot;,&#xd;
                &quot;partnerid&quot;: &quot;5&quot;,&#xd;
                &quot;appname&quot;: &quot;farmxtension&quot;&#xd;
            }&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/farmer-apps/video</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings"/>
              <stringProp name="Assertion.custom_message">200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Weather" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Weather" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">http://api.openweathermap.org/data/2.5/weather?units=metric&amp;appid=3f8f1b94005b1494664238d67cdde59d&amp;lat=-6.3334784&amp;lon=106.850625&amp;lang=en</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings"/>
              <stringProp name="Assertion.custom_message">200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Download data" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Basic c3lzYXBwOkFwaVdTMjAxMyE=</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">token</stringProp>
                <stringProp name="Header.value">${IdToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View to mobile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">staging.nestle.koltitrace.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/index.php/data_adm/sync_data/view_to_mobile?sqlview=getCollectivaSetting&amp;UserName=staging.nescafe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Download metadata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">staging.nestle.koltitrace.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/data_adm/off_data/download_metadata?BusinessUnitID=2&amp;username=staging.nescafe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings"/>
              <stringProp name="Assertion.custom_message">200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Send to mobile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?ProgramUid=RNAaFLosjvC;XmoZHVaB4ch;QDVit9tta6Z;O86xJZijLOl&amp;DateTimeFilter=0&amp;UserName=staging.nescafe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings"/>
              <stringProp name="Assertion.custom_message">200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Entity" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">target</stringProp>
                <stringProp name="Header.value">devel</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sender</stringProp>
                <stringProp name="Header.value">mqtt:com.koltiva.datacollection.neo-live-fa.jakselneo1-192b0662-79ba-4f20-bc52-a55685ecc92d|fcm</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">appName</stringProp>
                <stringProp name="Header.value">live</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">token</stringProp>
                <stringProp name="Header.value">${IdToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sync data" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;events&quot;: [&#xd;
        {&#xd;
            &quot;coordinate&quot;: {&#xd;
                &quot;latitude&quot;: 0,&#xd;
                &quot;longitude&quot;: 0&#xd;
            },&#xd;
            &quot;created&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;eventDate&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;lastUpdated&quot;: &quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss)}.${__RandomString(3,1234567890)}&quot;,&#xd;
            &quot;orgUnit&quot;: &quot;&quot;,&#xd;
            &quot;program&quot;: &quot;RNAaFLosjvC&quot;,&#xd;
            &quot;programName&quot;: &quot;Entity &quot;,&#xd;
            &quot;programStage&quot;: &quot;wgq1PqoOLPr&quot;,&#xd;
            &quot;status&quot;: &quot;COMPLETED&quot;,&#xd;
            &quot;action&quot;: &quot;TO_UPDATE&quot;,&#xd;
            &quot;event&quot;: &quot;${eventAddEntity}&quot;,&#xd;
            &quot;dataValues&quot;: [&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;AWvsQMOiClz&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;GET BU Nescafe_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BjwHSJ4CdP2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;EP - 4C&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Ca4RpdaqGiZ&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;UOM_1666706450_Total Farm Area&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;98&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FGMoqaGP8BQ&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Primary Status&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FxjdrBCIljD&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity Name &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;petani ${__time(yyyyMMddhhmmss)}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;HF8i1mi3xTM&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date of the data creation _HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2023-01-27 13:47:59&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;HPWIySnKrLy&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Handphone Number&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;+84 88646646&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;KCEATTSOcDi&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;GPS Location&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;POINT(-6.33447 106.852126)&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;KIFB2PrqWvs&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Farm Official ID&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;farm-01&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;LNVDRPYLyc3&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;POC Subunit&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1608001&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;O3jLOlTxlCb&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;GET BU Dairy_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;false&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;P0MiG4LQvsi&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Email&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;nguyentesr@mail.com&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PxAqZtpHo3c&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total Farm Area&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;39&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;QaIYilV5kJD&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Plan ID&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1674802079784&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;RjyTK7LG9lA&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Farmer Signature&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;RjyTK7LG9lA_${eventAddEntity}_${eventAddEntity}.jpg&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;SEPDfYdKdxk&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;POC Unit&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1608&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;SUecyq93drC&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity System ID&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;kol-01&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;UAw17LG6XGa&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Postal Code&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;84829&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;VtUbQ8DXscI&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Address 2&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;jl. ajadulu&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Xdsq9hCNFlJ&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Country&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;16&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ayd6Qh44yVU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddEntity}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;dkKE3KMiH8d&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity Partner &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;16&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;fmHvcBwwiaf&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;City&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;kemank&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;kDDIfIIUNIj&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity Type&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;klvtm5vAzD0&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Comment&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;test comment&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;knYEMPgdPnn&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Province&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1609&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;lYqOG19UqaG&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;GET BU Nespresso_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;false&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mSBrP7c8li6&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;District Name&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;16090001&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mXioj53rzhq&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Altitude&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;79.3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;nApThvNxUON&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity ID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1674802079751&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;pBpQStrVoLB&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Address 1&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;jl. jauh bgt&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;qsA6mUv05Cd&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity Picture&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;images/entity/photo/qsA6mUv05Cd_BGMH58jGqqG_BGMH58jGqqG.jpg&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;tQlLIKYeOt6&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Year Established&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2000&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;vQZOSdeBpNF&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;IP - Nescafe&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;wbTPRrnFklQ&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;EP - Rainforest Alliance&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/sync_event_kafka</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.status</stringProp>
              <stringProp name="EXPECTED_VALUE">true</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Send to mobile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?ProgramUid=RNAaFLosjvC&amp;ExtUid=${eventAddEntity};&amp;UserName=staging.nescafe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Download entity" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">https://fx-node-1-staging.nestle.koltitrace.com/koltitrace-global/sync-data/send-to-mobile?DateTimeFilter=0&amp;UserName=staging.nescafe&amp;ProgramUid=RNAaFLosjvC</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..rows.RNAaFLosjvC[*].uid</stringProp>
              <stringProp name="EXPECTED_VALUE">${eventAddEntity}</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add certification" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">target</stringProp>
                <stringProp name="Header.value">devel</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sender</stringProp>
                <stringProp name="Header.value">mqtt:com.koltiva.datacollection.neo-live-fa.jakselneo1-192b0662-79ba-4f20-bc52-a55685ecc92d|fcm</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">appName</stringProp>
                <stringProp name="Header.value">live</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">token</stringProp>
                <stringProp name="Header.value">${IdToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sync data" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;events&quot;: [&#xd;
        {&#xd;
            &quot;coordinate&quot;: {&#xd;
                &quot;latitude&quot;: 0,&#xd;
                &quot;longitude&quot;: 0&#xd;
            },&#xd;
            &quot;created&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;eventDate&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;lastUpdated&quot;: &quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss)}.${__RandomString(3,1234567890)}&quot;,&#xd;
            &quot;orgUnit&quot;: &quot;&quot;,&#xd;
            &quot;program&quot;: &quot;VqX1HGKhJMi&quot;,&#xd;
            &quot;programName&quot;: &quot;Entity Certification&quot;,&#xd;
            &quot;programStage&quot;: &quot;nSGn0UGjiAY&quot;,&#xd;
            &quot;status&quot;: &quot;COMPLETED&quot;,&#xd;
            &quot;action&quot;: &quot;TO_UPDATE&quot;,&#xd;
            &quot;event&quot;: &quot;${eventAddCertification}&quot;,&#xd;
            &quot;dataValues&quot;: [&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;GHJczsEQI3A&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Attachment File&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;GHJczsEQI3A_${eventAddCertification}_${eventAddCertification}.jpg&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;LxLkWBGc9hr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Certificaiton Date&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2023-01-31&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;NU1TBJsFTUr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Expired Date&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2027-01-31&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;QaKiSwBx3Fv&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Average Score&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;70&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Qx7YGUUsfct&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Certification Holder&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;13&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ayd6Qh44yVU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddEntity}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;djDm5t5WDM2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Certification Status&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;lLsA6kKGC3T&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Certification ID&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;cer - &quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;wJ4AWy4I8aM&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Event ID&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1675151867545&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/sync_event_kafka</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.status</stringProp>
              <stringProp name="EXPECTED_VALUE">true</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Send to mobile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?ProgramUid=VqX1HGKhJMi&amp;ExtUid=${eventAddCertification}&amp;UserName=staging.nescafe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Download certification" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?DateTimeFilter=0&amp;UserName=staging.nescafe&amp;ProgramUid=VqX1HGKhJMi</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.rows.VqX1HGKhJMi[*].uid</stringProp>
              <stringProp name="EXPECTED_VALUE">${eventAddCertification}</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add people" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">target</stringProp>
                <stringProp name="Header.value">devel</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sender</stringProp>
                <stringProp name="Header.value">mqtt:com.koltiva.datacollection.neo-live-fa.jakselneo1-192b0662-79ba-4f20-bc52-a55685ecc92d|fcm</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">appName</stringProp>
                <stringProp name="Header.value">live</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">token</stringProp>
                <stringProp name="Header.value">${IdToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sync data" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;events&quot;: [&#xd;
        {&#xd;
            &quot;coordinate&quot;: {&#xd;
                &quot;latitude&quot;: 0,&#xd;
                &quot;longitude&quot;: 0&#xd;
            },&#xd;
            &quot;created&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;eventDate&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;lastUpdated&quot;: &quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss)}.${__RandomString(3,1234567890)}&quot;,&#xd;
            &quot;orgUnit&quot;: &quot;&quot;,&#xd;
            &quot;program&quot;: &quot;XmoZHVaB4ch&quot;,&#xd;
            &quot;programName&quot;: &quot;Entity People&quot;,&#xd;
            &quot;programStage&quot;: &quot;oiVDOBaDB7p&quot;,&#xd;
            &quot;status&quot;: &quot;COMPLETED&quot;,&#xd;
            &quot;action&quot;: &quot;TO_UPDATE&quot;,&#xd;
            &quot;event&quot;: &quot;${eventAddPeople}&quot;,&#xd;
            &quot;dataValues&quot;: [&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;AWvsQMOiClz&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;GET BU Nescafe_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;CoEa4QlMPnY&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;People Phone Type&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;DPCbD9v04Cd&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;People Email&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;first@mail.com&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;DUbMr0KTBPJ&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;People Relation to Entity&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;GP1gCoGmv7e&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;People Address &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;jl nguyen keun&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;H0pzGFJfEz6&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;People Gender&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;m&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;IorkyQ60Zig&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;People Status&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;J1nnRhybwje&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;People Comment&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;comment test aaa&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;JOh8QbYoCRQ&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;People Year Started Farming&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1997&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;KyYfVOH8YId&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;People Age&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;27&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Lg48Gn2agVI&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Identification ID&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;12372717.&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;LzbsNAWy7Ts&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Graduation Year&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1990&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;M4s1LUEZ1cT&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;People Photo&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;M4s1LUEZ1cT_${eventAddPeople}_${eventAddPeople}.jpg&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;NNPnZJjXM1o&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;People Phone Nr&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;+84 8969464&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;O3jLOlTxlCb&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;GET BU Dairy_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;false&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;OIxjbgS6wGK&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;People Marital Status&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;TPCdMnhybvd&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;People UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddPeople}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;UjjG19VvvgV&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;People First Name&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;first - 01)}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Vywc6SrjwIY&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;People Year of Schooling&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;12&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Xdsq9hCNFlJ&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Country&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;16&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ayd6Qh44yVU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddEntity}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;dObeGDyD2LS&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;People Education Level_bycode&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;4&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;h7txxjetLtG&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Lead of Farmer&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;knYEMPgdPnn&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Province&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1609&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;lAutYy0uO68&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;People Primary Contact&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;lYqOG19UqaG&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;GET BU Nespresso_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;false&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;loAEVebtUeZ&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Year of Joined Nescafe Plan&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2003&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mSBrP7c8li6&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;District Name&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;16090001&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;pBoK38I0xav&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;People Last Name&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;last tanggal-jam&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;tj2f8QT2xhg&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Birth of Year&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1996&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;uudJXY1Dvlu&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Identification ID Type&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/sync_event_kafka</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.status</stringProp>
              <stringProp name="EXPECTED_VALUE">true</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Send to mobile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?ProgramUid=XmoZHVaB4ch&amp;ExtUid=${eventAddPeople}&amp;UserName=staging.nescafe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">2000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Download people" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?DateTimeFilter=0&amp;UserName=staging.nescafe&amp;ProgramUid=XmoZHVaB4ch</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="false">
              <stringProp name="JSON_PATH">$..rows.XmoZHVaB4ch[*].uid</stringProp>
              <stringProp name="EXPECTED_VALUE">${eventAddPeople}</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add plot" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">target</stringProp>
                <stringProp name="Header.value">devel</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sender</stringProp>
                <stringProp name="Header.value">mqtt:com.koltiva.datacollection.neo-live-fa.jakselneo1-192b0662-79ba-4f20-bc52-a55685ecc92d|fcm</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">appName</stringProp>
                <stringProp name="Header.value">live</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">token</stringProp>
                <stringProp name="Header.value">${IdToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sync data" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;events&quot;: [&#xd;
        {&#xd;
            &quot;coordinate&quot;: {&#xd;
                &quot;latitude&quot;: 0,&#xd;
                &quot;longitude&quot;: 0&#xd;
            },&#xd;
            &quot;created&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;eventDate&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;lastUpdated&quot;: &quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss)}.${__RandomString(3,1234567890)}&quot;,&#xd;
            &quot;orgUnit&quot;: &quot;&quot;,&#xd;
            &quot;program&quot;: &quot;O86xJZijLOl&quot;,&#xd;
            &quot;programName&quot;: &quot;Entity Plot&quot;,&#xd;
            &quot;programStage&quot;: &quot;WtORaRK8Tsk&quot;,&#xd;
            &quot;status&quot;: &quot;COMPLETED&quot;,&#xd;
            &quot;action&quot;: &quot;TO_UPDATE&quot;,&#xd;
            &quot;event&quot;: &quot;${eventAddPlot}&quot;,&#xd;
            &quot;dataValues&quot;: [&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;AWvsQMOiClz&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;GET BU Nescafe_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FIUPPfwVbJb&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Coffee Area Under Active Production&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;15&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;H23yYksxyrB&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Plot Status&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;HhOjFzwdixR&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total Coffee Area 2_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;25&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;KCEATTSOcDi&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;GPS Location&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;POINT(-6.247382 106.825487)&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Oi2qzCxynw8&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Land Area Under Natural habitat or conservation management&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;34&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;RM7J7QfuLq0&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;UOM_1673506877_Land Area Under Natural habitat or conservation management&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;98&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;UN2qvwn0QyR&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Coffee Area Under Rejuvenation Stage 3 years&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;14&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ViclqjzZiiI&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Year Started&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1970&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;W6SsrUiwMtB&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total area coffee&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;37&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;WAtlzR9BL47&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Other crops&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;01&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ayd6Qh44yVU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddEntity}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;cQnV2RyKbsM&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;UOM_1673506451_Coffee Area Intercropping&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;98&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;f3hDoDVl63o&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total Coffee Area_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;29&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;gj4yUMCnAM8&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total area ha nescafe&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;106&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;hjyURXBDM0k&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Coffee Area Intercropping&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;12&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;kIeAmCY1F2H&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Plot Nr&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;kXrUj3s5beF&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;UOM_1673506601_Coffee area monocropping&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;98&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;kgVM7HxlnUy&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Variety _FILTERBYKEY_business_unit&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;004008228&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;lMuHYm4qoNH&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Production Kg&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;5000&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;lYqOG19UqaG&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;GET BU Nespresso_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;false&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;m3H8aO40btU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;UOM_1673506080_Coffee Area Under Active Production&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;98&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mWeUMDrQOZS&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity Plot UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddPlot}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mXioj53rzhq&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Altitude&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;40.3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;oiT5mUyCx0z&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Species _FILTERBYKEY_business_unit&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;004008&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;qXWqTizd4Gx&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Commodity on Plot _FILTERBYKEY_commodity_business_unit&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;004&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;rt7mMJMgCnB&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Coffee area monocropping&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;13&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;shBggAhlcb1&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;UOM_1673505527_Total area coffee&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;98&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;tqpQTxnLCoH&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;UOM_1673507018_Farm Area Dedicated to other users&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;98&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;xgnkBY4VACM&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Farm Area Dedicated to other users&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;35&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/sync_event_kafka</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.status</stringProp>
              <stringProp name="EXPECTED_VALUE">true</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Send to mobile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?ProgramUid=O86xJZijLOl&amp;ExtUid=${eventAddPlot}&amp;UserName=staging.nescafe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Download plot" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?DateTimeFilter=0&amp;UserName=staging.nescafe&amp;ProgramUid=O86xJZijLOl</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.rows.O86xJZijLOl[*].uid</stringProp>
              <stringProp name="EXPECTED_VALUE">${eventAddPlot}</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add action plan" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">target</stringProp>
                <stringProp name="Header.value">devel</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sender</stringProp>
                <stringProp name="Header.value">mqtt:com.koltiva.datacollection.neo-live-fa.jakselneo1-192b0662-79ba-4f20-bc52-a55685ecc92d|fcm</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">appName</stringProp>
                <stringProp name="Header.value">live</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">token</stringProp>
                <stringProp name="Header.value">${IdToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sync data" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;events&quot;: [&#xd;
        {&#xd;
            &quot;coordinate&quot;: {&#xd;
                &quot;latitude&quot;: 0,&#xd;
                &quot;longitude&quot;: 0&#xd;
            },&#xd;
            &quot;created&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;eventDate&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;lastUpdated&quot;: &quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss)}.${__RandomString(3,1234567890)}&quot;,&#xd;
            &quot;orgUnit&quot;: &quot;&quot;,&#xd;
            &quot;program&quot;: &quot;fcZn70WQSqh&quot;,&#xd;
            &quot;programName&quot;: &quot;Entity Action Plan&quot;,&#xd;
            &quot;programStage&quot;: &quot;MWBCJp1R2f2&quot;,&#xd;
            &quot;status&quot;: &quot;COMPLETED&quot;,&#xd;
            &quot;action&quot;: &quot;TO_UPDATE&quot;,&#xd;
            &quot;event&quot;: &quot;${eventAddActionPlan}&quot;,&#xd;
            &quot;dataValues&quot;: [&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;AjyVQSttdJX&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Action&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;test action&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BRQfvN3tx8c&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Priority Status&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;completed&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;By5LLYYy258&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity Action Plan UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddActionPlan}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;D05GvfNkRoY&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Priority Action Plan&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;low&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;EdIP1gBitw2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date Action Plan&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${__time(yyyy-MM-dd)}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;KU8zMlYLtHY&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Comment Action Plan&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;test comment&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Qk51gDtbD8n&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Who_SINGLE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;JoTSfjukwhB&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;UlxLfAfgG8g&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Topic&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;002016046,002016059,002016077&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;VLnkAVpTj3u&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;With Whom&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;staging nescafe&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ayd6Qh44yVU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddEntity}&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/sync_event_kafka</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.status</stringProp>
              <stringProp name="EXPECTED_VALUE">true</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Send to mobile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?ProgramUid=fcZn70WQSqh&amp;ExtUid=${eventAddActionPlan}&amp;UserName=staging.nescafe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Download action plan" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?DateTimeFilter=0&amp;UserName=staging.nescafe&amp;ProgramUid=fcZn70WQSqh</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.rows.fcZn70WQSqh[*].uid</stringProp>
              <stringProp name="EXPECTED_VALUE">${eventAddActionPlan}</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add assesment" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">target</stringProp>
                <stringProp name="Header.value">devel</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sender</stringProp>
                <stringProp name="Header.value">mqtt:com.koltiva.datacollection.neo-live-fa.jakselneo1-192b0662-79ba-4f20-bc52-a55685ecc92d|fcm</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">appName</stringProp>
                <stringProp name="Header.value">live</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">token</stringProp>
                <stringProp name="Header.value">${IdToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sync data adoption assesment" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;events&quot;: [&#xd;
        {&#xd;
            &quot;coordinate&quot;: {&#xd;
                &quot;latitude&quot;: 0,&#xd;
                &quot;longitude&quot;: 0&#xd;
            },&#xd;
            &quot;created&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;eventDate&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;lastUpdated&quot;: &quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss)}.${__RandomString(3,1234567890)}&quot;,&#xd;
            &quot;orgUnit&quot;: &quot;&quot;,&#xd;
            &quot;program&quot;: &quot;Bum0Ya6YMxX&quot;,&#xd;
            &quot;programName&quot;: &quot;ADOPTION ASSESSMENT&quot;,&#xd;
            &quot;programStage&quot;: &quot;JG8ddhs8smG&quot;,&#xd;
            &quot;status&quot;: &quot;COMPLETED&quot;,&#xd;
            &quot;action&quot;: &quot;TO_UPDATE&quot;,&#xd;
            &quot;event&quot;: &quot;${eventAddAdoptionAsses}&quot;,&#xd;
            &quot;dataValues&quot;: [&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BFTTlDhf5Cc&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Adoption Assessment ID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1675323108313&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BXwvfNjMT95&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Agronomy - Farm Diversification&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BqSaN1kWCKu&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Enumerator&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;staging nescafe&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;EFLqyAoLAgk&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Agronomy - Soil Management&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FYm3kTx9lAP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Interviewee Person_SINGLE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;QYbbBERHwgY&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FiZb9j3wLmg&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Corrective Actions&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;-&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FqCM58CWoIy&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Agronomy - Weed Management&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;GXeTGjkKFtk&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Agronomy - Crop Husbandry&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;IGB1LYXujlV&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;ADOPTION ASSESSMENT UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddAdoptionAsses}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;JAeYeTEdFDB&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Agronomy - Financial Management&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;JQwEEJgJOsy&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Agronomy - Water Management&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;NXCDM1ptpIr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date of the data creation&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;OPV7v4RrmBS&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total Amount of Robusta Coffee Harvested&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;322&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;OtxuWl5wHRF&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Post-harvest Handling - Harvest&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;P5rrZ7i3yWX&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Year of reporting&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2015&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PhvIZoAGgPr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Comments&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;-&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;RA6ql9Gmu0A&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total Amount of Arabica Coffee Harvested&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;300&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;RmCVnIvZuhb&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Agronomy - Pest and Disease Control&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;SSV2QvAx3G1&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Plantlet Survival Percentage&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;90&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;XISDbreXXxy&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Post-harvest Handling - Post-harvest Dry Process&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ZyfE4Sw8hxS&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Agronomy - Land Preparation&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ayd6Qh44yVU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddEntity}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;crx1340fed2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Email&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;mail@mail.com&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;iy8YFRJ39Rc&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Agronomy - Rejuvenation&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mFHVVrbGO2p&quot;,&#xd;
                    &quot;fieldName&quot;: &quot; Is there any evidence to submit&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;moPU6mUzFB2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date Of The Data Collection&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2023-02-02&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;phLVJvVZC2V&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Post-harvest Handling - Storage&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;qKVNEsTbP8C&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Agronomy - Biodiversity&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;qjTzNlV4h5B&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Evidence Photo&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;qjTzNlV4h5B_${eventAddAdoptionAsses}_${eventAddAdoptionAsses}.jpg&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;rdvYpIsGc7W&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Interviewee&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;QYbbBERHwgY&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;sdtKtEPBZ6Z&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Post-harvest Handling - Post-harvest Water Management&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;t0cuYtbDx8c&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Agronomy - Agrochemical Handling&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;vRgwUUqY4XK&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Agronomy - Renovation&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;wOOevTTlEjl&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Agronomy - Plant Nutrition&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/sync_event_kafka</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.status</stringProp>
              <stringProp name="EXPECTED_VALUE">true</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Send to mobile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?ProgramUid=Bum0Ya6YMxX&amp;ExtUid=${eventAddAdoptionAsses}&amp;UserName=staging.nescafe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Download adoption assesment" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?DateTimeFilter=0&amp;UserName=staging.nescafe&amp;ProgramUid=Bum0Ya6YMxX</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.rows.Bum0Ya6YMxX[*].uid</stringProp>
              <stringProp name="EXPECTED_VALUE">${eventAddAdoptionAsses}</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sync data basic farm information" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;events&quot;: [&#xd;
        {&#xd;
            &quot;coordinate&quot;: {&#xd;
                &quot;latitude&quot;: 0,&#xd;
                &quot;longitude&quot;: 0&#xd;
            },&#xd;
            &quot;created&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;eventDate&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;lastUpdated&quot;: &quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss)}.${__RandomString(3,1234567890)}&quot;,&#xd;
            &quot;orgUnit&quot;: &quot;&quot;,&#xd;
            &quot;program&quot;: &quot;IhNcmrqUk79&quot;,&#xd;
            &quot;programName&quot;: &quot;Basic Farm Information Nescafe&quot;,&#xd;
            &quot;programStage&quot;: &quot;X8YGTTkMDpI&quot;,&#xd;
            &quot;status&quot;: &quot;COMPLETED&quot;,&#xd;
            &quot;action&quot;: &quot;TO_UPDATE&quot;,&#xd;
            &quot;event&quot;: &quot;${eventBasicFarmInf}&quot;,&#xd;
            &quot;dataValues&quot;: [&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BdOwIYimYIf&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Income From Coffee2&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;80&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BqSaN1kWCKu&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Enumerator&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;staging nescafe&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;EP7K1uLtB8v&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Coffee Area Intercropped&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;21&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FIUPPfwVbJb&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Coffee Area Under Active Production&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;0&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FYm3kTx9lAP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Interviewee Person_SINGLE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;QYbbBERHwgY&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FiZb9j3wLmg&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Corrective Actions&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;-&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FxjdrBCIljD&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity Name &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;petani 20230202122902&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;JbkkKHEDCDJ&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;BPM Farm Old or New&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;MI7U0JR73kP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Temporary employees&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;NXCDM1ptpIr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date of the data creation&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Oi2qzCxynw8&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Land Area Under Natural habitat or conservation management&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;0&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;OpbP65xNs5c&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Basic Farm Information Nescafe ID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1675323605925&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;OrjvEIeAl64&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;UOM_1669887920_Coffee Area Production&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;98&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PhvIZoAGgPr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Comments&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;-&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PxAqZtpHo3c&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total Farm Area&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;39.00&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;QOJFtm4rwxl&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Copy Plot Information&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;false&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;W6SsrUiwMtB&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total area coffee&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;0&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ZCsaskuAzD0&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Farms Plantlets Capacity&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;21&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ayd6Qh44yVU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddEntity}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;cRsqRXEN41i&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Coffee Types&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;cWDN40gE09Z&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total Land Managed&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;20&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;crx1340fed2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Email&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;qmail@mail.com&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;dAPPdoxBwvf&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;UOM_1668151539_Total No of Plantlets&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;88&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;eI12yZlxKfB&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Permanent employees&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;25&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;eu0AhqwytLx&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;UOM_1669887633_Area Other Uses&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;98&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;fIzp1R3hDpL&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;UOM_1668151270_Total Land Managed&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;98&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;g985odd7UzE&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Area Other Uses&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;20&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;hjyURXBDM0k&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Coffee Area Intercropping&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;0&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;jEQFn5sxxny&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;UOM_1669887561_Area Conserved&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;98&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;k5aWhjQnUx6&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;BOC - Fair Trade International&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;kIeAmCY1F2H&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Plot Nr&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;5&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;lcpRaSNNbia&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Coffee Area Production&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;38&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;lrM59Iyjdmq&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Area Conserved&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;38&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mFHVVrbGO2p&quot;,&#xd;
                    &quot;fieldName&quot;: &quot; Is there any evidence to submit&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;moPU6mUzFB2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date Of The Data Collection&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2023-02-02&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;pBpQStrVoLB&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Address 1&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;jl. jauh bgt&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;pq0LZgWQPcg&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Ready for Receiving Distribution&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;qjTzNlV4h5B&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Evidence Photo&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;qjTzNlV4h5B_${eventBasicFarmInf}_${eventBasicFarmInf}.jpg&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;qsA6mUv05Cd&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity Picture&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;images/entity/photo/qsA6mUv05Cd_${eventAddEntity}_${eventAddEntity}.jpg&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;rdvYpIsGc7W&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Interviewee&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;QYbbBERHwgY&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;s4yTMExrJow&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Year Reporting&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2021&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;sbeKVPOXM2t&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;UOM_1675136914_Total Farm Area&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;98&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;swJd5I6RkGy&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Basic Farm Information Nescafe UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventBasicFarmInf}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;tNT4jIBscJY&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;UOM_1668151157_Coffee Area Intercropped&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;98&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;uCZ7fp0LZfR&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total No of Plantlets&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;31&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;vHva04AY5ba&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;BOC - Cafe Practice&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;xgnkBY4VACM&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Farm Area Dedicated to other users&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;0&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/sync_event_kafka</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.status</stringProp>
              <stringProp name="EXPECTED_VALUE">true</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Send to mobile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?ProgramUid=IhNcmrqUk79&amp;ExtUid=${eventBasicFarmInf}&amp;UserName=staging.nescafe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Download basic farm information" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?DateTimeFilter=0&amp;UserName=staging.nescafe&amp;ProgramUid=IhNcmrqUk79</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.rows.IhNcmrqUk79[*].uid</stringProp>
              <stringProp name="EXPECTED_VALUE">${eventBasicFarmInf}</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sync data nescafe early warning" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;events&quot;: [&#xd;
        {&#xd;
            &quot;coordinate&quot;: {&#xd;
                &quot;latitude&quot;: 0,&#xd;
                &quot;longitude&quot;: 0&#xd;
            },&#xd;
            &quot;created&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;eventDate&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;lastUpdated&quot;: &quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss)}.${__RandomString(3,1234567890)}&quot;,&#xd;
            &quot;orgUnit&quot;: &quot;&quot;,&#xd;
            &quot;program&quot;: &quot;W0xeE5T3bid&quot;,&#xd;
            &quot;programName&quot;: &quot;Nescafe Early Warning&quot;,&#xd;
            &quot;programStage&quot;: &quot;PCPJCscJYdP&quot;,&#xd;
            &quot;status&quot;: &quot;COMPLETED&quot;,&#xd;
            &quot;action&quot;: &quot;TO_UPDATE&quot;,&#xd;
            &quot;event&quot;: &quot;${eventAddNescafeEarWar}&quot;,&#xd;
            &quot;dataValues&quot;: [&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;7txweJTHq7u&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Nescafe Early Warning UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddNescafeEarWar}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BqSaN1kWCKu&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Enumerator&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;staging nescafe&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Cl2hFzzrA5n&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Child Labour&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;false&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FYm3kTx9lAP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Interviewee Person_SINGLE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;YTwbeQRRQWE&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FiZb9j3wLmg&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Corrective Actions&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;-&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;NXCDM1ptpIr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date of the data creation&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;P5rrZ7i3yWX&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Year of reporting&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2018&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PhvIZoAGgPr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Comments&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;ok&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;SwrKxbyvWio&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Nescafe Early Warning ID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1676273584446&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;aOiEta6aTRf&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Forced Labour&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;false&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ahEwo3iDpJx&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Deforestation of Primary and or Protected Area&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;false&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ayd6Qh44yVU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddEntity}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;cNWKvPASegH&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Please specify in notes whether it is deforestation or encroachment&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;crx1340fed2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Email&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;surel@mail.com&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;dLHEB5ckjCi&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Use or Presence of Banned Chemicals&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;false&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;fsoGnyJUMaJ&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Encroachment in eg National Park Protected Area&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;false&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mFHVVrbGO2p&quot;,&#xd;
                    &quot;fieldName&quot;: &quot; Is there any evidence to submit&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;false&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;moPU6mUzFB2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date Of The Data Collection&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${__time(yyyy-MM-dd)}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;rdvYpIsGc7W&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Interviewee&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;YTwbeQRRQWE&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/sync_event_kafka</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.status</stringProp>
              <stringProp name="EXPECTED_VALUE">true</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Send to mobile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?ProgramUid=W0xeE5T3bid&amp;ExtUid=${eventAddNescafeEarWar}&amp;UserName=staging.nescafe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Download nescafe early warning" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?DateTimeFilter=0&amp;UserName=staging.nescafe&amp;ProgramUid=W0xeE5T3bid</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.rows.W0xeE5T3bid[*].uid</stringProp>
              <stringProp name="EXPECTED_VALUE">${eventAddNescafeEarWar}</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sync data M&amp;E Core Soil 2020" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;events&quot;: [&#xd;
        {&#xd;
            &quot;coordinate&quot;: {&#xd;
                &quot;latitude&quot;: 0,&#xd;
                &quot;longitude&quot;: 0&#xd;
            },&#xd;
            &quot;created&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;eventDate&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;lastUpdated&quot;: &quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss)}.${__RandomString(3,1234567890)}&quot;,&#xd;
            &quot;orgUnit&quot;: &quot;&quot;,&#xd;
            &quot;program&quot;: &quot;J3zatTYCCHb&quot;,&#xd;
            &quot;programName&quot;: &quot;M&amp;E CORE Soil 2020&quot;,&#xd;
            &quot;programStage&quot;: &quot;SWpNF19Vx6Q&quot;,&#xd;
            &quot;status&quot;: &quot;COMPLETED&quot;,&#xd;
            &quot;action&quot;: &quot;TO_UPDATE&quot;,&#xd;
            &quot;event&quot;: &quot;${eventAddM&amp;ECoSo2020}&quot;,&#xd;
            &quot;dataValues&quot;: [&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BqSaN1kWCKu&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Enumerator&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;staging nescafe&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;D9rfe37Hvb8&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;MnE CORE Soil 2020 UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddM&amp;ECoSo2020}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;DudJYcGMpsk&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Fertilizer Applied Due to Soil Analysis&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FYm3kTx9lAP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Interviewee Person_SINGLE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;YTwbeQRRQWE&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FiZb9j3wLmg&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Corrective Actions&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;-&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;MU3ZZ08Rj7E&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Basis for Fertilization&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;NXCDM1ptpIr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date of the data creation&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2023-02-13 14:55:00&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;OSlGvdHJbtR&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;EC - Mulching&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;P5rrZ7i3yWX&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Year of reporting&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2018&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PhvIZoAGgPr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Comments&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;-&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PiyWY3Ru3LS&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Evidence of Erosion&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;RY6eouxuVff&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;EC - Live fences and or barriers&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;UpFeJVPNT6s&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Organic Fertilizers&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;4&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;WLkXIhPpk4w&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FT - Period before or during blossom&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ayd6Qh44yVU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddEntity}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;crx1340fed2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Email&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;surel@mail.com&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;eTrjvEFO53r&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;MnE CORE Soil 2020 ID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1676274901079&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;gbMqx5MRzOv&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Quality of Soil Conservation&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;GOOD&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mFHVVrbGO2p&quot;,&#xd;
                    &quot;fieldName&quot;: &quot; Is there any evidence to submit&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;false&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;moPU6mUzFB2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date Of The Data Collection&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2023-02-13&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;rIE8mJ8Tsk0&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;EC - Contour planting&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;rXQLJNndfF9&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Terrain &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;FLAT&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;rdvYpIsGc7W&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Interviewee&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;YTwbeQRRQWE&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;tEpFdGGNvJf&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FT - No fertilizer applied&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;umSnRhzeAl9&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FA - Lime or dolomite&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/sync_event_kafka</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.status</stringProp>
              <stringProp name="EXPECTED_VALUE">true</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Send to mobile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?ProgramUid=J3zatTYCCHb&amp;ExtUid=${eventAddM&amp;ECoSo2020}&amp;UserName=staging.nescafe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Download M&amp;E Core Soil 2020" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?DateTimeFilter=0&amp;UserName=staging.nescafe&amp;ProgramUid=J3zatTYCCHb</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.rows.J3zatTYCCHb[*].uid</stringProp>
              <stringProp name="EXPECTED_VALUE">${eventAddM&amp;ECoSo2020}</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sync data M&amp;E Plantlets 2020" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;events&quot;: [&#xd;
        {&#xd;
            &quot;coordinate&quot;: {&#xd;
                &quot;latitude&quot;: 0,&#xd;
                &quot;longitude&quot;: 0&#xd;
            },&#xd;
            &quot;created&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;eventDate&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;lastUpdated&quot;: &quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss)}.${__RandomString(3,1234567890)}&quot;,&#xd;
            &quot;orgUnit&quot;: &quot;&quot;,&#xd;
            &quot;program&quot;: &quot;bs6gyc29TnL&quot;,&#xd;
            &quot;programName&quot;: &quot;M&amp;E Plantlets 2020&quot;,&#xd;
            &quot;programStage&quot;: &quot;qf8UtoGidrC&quot;,&#xd;
            &quot;status&quot;: &quot;COMPLETED&quot;,&#xd;
            &quot;action&quot;: &quot;TO_UPDATE&quot;,&#xd;
            &quot;event&quot;: &quot;${eventAddM&amp;EPlanlets2020}&quot;,&#xd;
            &quot;dataValues&quot;: [&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Bk0cweGFKiO&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Plantlets Received from Nescafe&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;YES_NESC&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BqSaN1kWCKu&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Enumerator&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;staging nescafe&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;DQJ9bQMBhmc&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;MnE Plantlets 2020 UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddM&amp;EPlanlets2020}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;E0230e7SoUu&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Plantlet Quality&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FYm3kTx9lAP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Interviewee Person_SINGLE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;brWQqQTYwTE&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FiZb9j3wLmg&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Corrective Actions&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;-&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;NFo7zOs3T4k&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Last Plantlet Receipt Date&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2022-02-13&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;NXCDM1ptpIr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date of the data creation&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;OkBZsjrzBqT&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Plantlets Cumulative Number Received&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;90&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;P5rrZ7i3yWX&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Year of reporting&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2019&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PhvIZoAGgPr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Comments&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;-&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;SSV2QvAx3G1&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Plantlet Survival Percentage&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;80&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ZIJWVoK8Tqb&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Plantlets Last 12 Months&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;80&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ayd6Qh44yVU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddEntity}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;bvEGVaDCA6n&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;MnE Plantlets 2020 ID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1676276311481&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;coegKR5t3Ne&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Objective of Plantlets&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;EXPANSION&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;crx1340fed2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Email&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;surel@mail.com&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mFHVVrbGO2p&quot;,&#xd;
                    &quot;fieldName&quot;: &quot; Is there any evidence to submit&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;moPU6mUzFB2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date Of The Data Collection&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${__time(yyyy-MM-dd)}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;qjTzNlV4h5B&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Evidence Photo&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;qjTzNlV4h5B_${eventAddM&amp;EPlanlets2020}_${eventAddM&amp;EPlanlets2020}.jpg&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;rdvYpIsGc7W&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Interviewee&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;brWQqQTYwTE&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;tqseSBPIAk7&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Plantlet Satisfaction&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/sync_event_kafka</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.status</stringProp>
              <stringProp name="EXPECTED_VALUE">true</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Send to mobile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?ProgramUid=bs6gyc29TnL&amp;ExtUid=${eventAddM&amp;EPlanlets2020}&amp;UserName=staging.nescafe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Download M&amp;E Plantlets 2020" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?DateTimeFilter=0&amp;UserName=staging.nescafe&amp;ProgramUid=bs6gyc29TnL</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.rows.bs6gyc29TnL[*].uid</stringProp>
              <stringProp name="EXPECTED_VALUE">${eventAddM&amp;EPlanlets2020}</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sync data FBS ADOPTION ASSESSMENT" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;events&quot;: [&#xd;
        {&#xd;
            &quot;coordinate&quot;: {&#xd;
                &quot;latitude&quot;: 0,&#xd;
                &quot;longitude&quot;: 0&#xd;
            },&#xd;
            &quot;created&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;eventDate&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;lastUpdated&quot;: &quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss)}.${__RandomString(3,1234567890)}&quot;,&#xd;
            &quot;orgUnit&quot;: &quot;&quot;,&#xd;
            &quot;program&quot;: &quot;bt6fsFQGsOE&quot;,&#xd;
            &quot;programName&quot;: &quot;FBS ADOPTION ASSESSMENT&quot;,&#xd;
            &quot;programStage&quot;: &quot;faKjVDQI6PZ&quot;,&#xd;
            &quot;status&quot;: &quot;COMPLETED&quot;,&#xd;
            &quot;action&quot;: &quot;TO_UPDATE&quot;,&#xd;
            &quot;event&quot;: &quot;${eventAddFBSAdoptionAsses}&quot;,&#xd;
            &quot;dataValues&quot;: [&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BqSaN1kWCKu&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Enumerator&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;staging nescafe&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;CaqY8mNPiEq&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Farmers identifying and calculating money out and money in&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FYm3kTx9lAP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Interviewee Person_SINGLE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;brWQqQTYwTE&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FiZb9j3wLmg&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Corrective Actions&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;-&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;G9fjU92cnyG&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Farmers able to manage financial deficits&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;H4GysJov3JF&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Farmers doing correct planning&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;HtJmnSnNNco&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Farmers able to manage surplus money&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;KiFyxgOlUyF&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Farmer groups or organizations providing services to the members&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Kt9sm74pnIy&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Farmers identifying periods of cash deficit and surplus&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;yes&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;L2laSOSxFB4&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Farmers able to determine profit or loss of a farm enterprise&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;LZVeYgZgVL4&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Farmers analyzing main cost centers and action plan to optimize&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;MkGytN550cw&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Farmers requesting inputs in time&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;NXCDM1ptpIr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date of the data creation&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;P5rrZ7i3yWX&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Year of reporting&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2019&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PhvIZoAGgPr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Comments&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;-&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;T1F6V6qjzXa&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Farmers assessing different options&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ZVKzlfwWcOy&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FBS ADOPTION ASSESSMENT UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddFBSAdoptionAsses}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ZiLUGfNkOdp&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FBS ADOPTION ASSESSMENT ID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1676276458608&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ayd6Qh44yVU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddEntity}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;crx1340fed2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Email&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;surel@mail.com&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;grge3SiyaqI&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Farmers conducting farm activities according to the planning&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mFHVVrbGO2p&quot;,&#xd;
                    &quot;fieldName&quot;: &quot; Is there any evidence to submit&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;moPU6mUzFB2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date Of The Data Collection&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${__time(yyyy-MM-dd)}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;qjTzNlV4h5B&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Evidence Photo&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;qjTzNlV4h5B_${eventAddFBSAdoptionAsses}_${eventAddFBSAdoptionAsses}.jpg&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;rdvYpIsGc7W&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Interviewee&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;brWQqQTYwTE&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/sync_event_kafka</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.status</stringProp>
              <stringProp name="EXPECTED_VALUE">true</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Send to mobile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?ProgramUid=bt6fsFQGsOE&amp;ExtUid=${eventAddFBSAdoptionAsses}&amp;UserName=staging.nescafe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Download FBS ADOPTION ASSESMENT" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?DateTimeFilter=0&amp;UserName=staging.nescafe&amp;ProgramUid=bt6fsFQGsOE</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.rows.bt6fsFQGsOE[*].uid</stringProp>
              <stringProp name="EXPECTED_VALUE">${eventAddFBSAdoptionAsses}</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sync data Regen Agri Farm Info" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;events&quot;: [&#xd;
        {&#xd;
            &quot;coordinate&quot;: {&#xd;
                &quot;latitude&quot;: 0,&#xd;
                &quot;longitude&quot;: 0&#xd;
            },&#xd;
            &quot;created&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;eventDate&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;lastUpdated&quot;: &quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss)}.${__RandomString(3,1234567890)}&quot;,&#xd;
            &quot;orgUnit&quot;: &quot;&quot;,&#xd;
            &quot;program&quot;: &quot;pwTQXERLEz3&quot;,&#xd;
            &quot;programName&quot;: &quot;Regen Agri Farm Info&quot;,&#xd;
            &quot;programStage&quot;: &quot;aJLe1yd7Sqg&quot;,&#xd;
            &quot;status&quot;: &quot;COMPLETED&quot;,&#xd;
            &quot;action&quot;: &quot;TO_UPDATE&quot;,&#xd;
            &quot;event&quot;: &quot;${eventAddRegenAgriFarm}&quot;,&#xd;
            &quot;dataValues&quot;: [&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;5kJAoL9X4YS&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Texture classification of predominant soil&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;4&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;AtlyNqwxq6q&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Fourth Crop - Average sales price USDkg&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;14&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;B4VEUcRBRV1&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;First Economic Crop&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;BEANS&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BqSaN1kWCKu&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Enumerator&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;staging nescafe&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;CHb2AaIXdOv&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;First Crop - Supplied&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Dvih9TnMID3&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Second Crop - Predominant typology&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;DvknaPMCoCU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Second Crop - Average sales price USDkg&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;600&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;F7YJiU81Zbq&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;First Crop - Predominant typology&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FYm3kTx9lAP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Interviewee Person_SINGLE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;qYbeWbBwrEw&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FYn86xJan5r&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;First Crop - Synthetic fertilizer applied NPKurea - kghayr&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;30&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FiZb9j3wLmg&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Corrective Actions&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;-&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FrL0ldmoYCD&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Average annual temperature Degree Celsius&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;25&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;GuSPXIkfvSP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Regen Agri Farm info ID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1676279173103&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;HkftIhRxHP1&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;First Crop - Total organic fertiliser applied kghayr&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;29&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;HyiUAEVhlaV&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Fifth Crop - Water usage for processing lkg&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;52&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ItEO55zXZ5X&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;First Crop - Number of trees plants per ha&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;50&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;JVIp4f2yarN&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Third Crop - Main Crop Area Ha&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;30&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;KID3PjFwloc&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Fifth Crop - Supplied&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;LKLblqoK38J&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Fifth Crop - Number of trees plants per ha&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;50&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;LckjG149NIA&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Third Crop - Predominant typology&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;M8FicqBHgQt&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Fifth Crop - Average production cost USDyr&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Mu7j7EihX3T&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Annual Rainfall mm&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;30&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;NV8v3KNiF1A&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;First Crop - Water usage for irrigation lhayr&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;41&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;NXCDM1ptpIr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date of the data creation&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;NmOWFXm5wGN&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Fourth Crop - Average production cost USDyr&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;5&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;O70YcGIYkt4&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Third Crop - Water usage for processing lkg&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;25&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;OEXqQSqfe8V&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;First Crop - Water usage for processing lkg&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;37&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ObXfamwB0II&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Fifth Crop - Yield kghayr&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;36&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Otuif49NID4&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Fourth Crop - Total organic fertiliser applied kghayr&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;23&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;P5rrZ7i3yWX&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Year of reporting&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2018&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PTmGtQLKPxI&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Second Crop - Water usage for processing (l/kg)&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;60&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PTmLDuiiDqK&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Second Crop - Main Crop Area Ha&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;60&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PhvIZoAGgPr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Comments&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;-&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;QcRL7MHC1Gr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Fourth Crop - Age of perennial crops years&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;QoNLOncasTa&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Second Crop - Number of trees plants per ha&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;48&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;RpSeiRv5WEQ&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Third Crop - Age of perennial crops (years)&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;5&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;S1HFDB7rnFi&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Third Crop - Do you want to enter data for Crop&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;SSUyBseUJ0r&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Second Economic Crop&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;BEETLE_NUT&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;SkxOvHWZ7j7&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;First Crop - Average sales price USDkg&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;20&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;TzHJXbDA4dm&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Fifth Economic Crop&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;FRUIT_TREE&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;U7fnnRi53s5&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Fifth Crop - Total organic fertiliser applied kghayr&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;28&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;UeNkStvmyJW&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Third Crop - Total organic fertiliser applied kghayr&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;13&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;UsUee9cTMG3&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Second Crop - Yield kghayr&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;38&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;VmwAtl1crJq&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Fourth Crop - Water usage for processing lkg&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;68&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;WMpskwGP3ux&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Third Crop - Total synthetic fertiliser applied (NPK/urea - kg/ha/yr)&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;XvTWzCun3gb&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Fifth Crop - Age of perennial crops years&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Y0tDLs9xC1H&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;First Crop - Yield kghayr&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;300&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Z46MX5cjZYs&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Third Crop - Number of trees/ plants per ha&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;40&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;aG7ZMxVWx15&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Fifth Crop - Total synthetic fertiliser applied NPKurea - kghayr&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;21&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ayd6Qh44yVU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddEntity}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;bppVraEFP7I&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Fourth Crop - Total synthetic fertiliser applied NPKurea - kghayr&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;9&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;bqun986vAx5&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Fifth Crop - Average sales price USDkg&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;50&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;c7BQPeq6mSo&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Fourth Crop - Yield kghayr&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;215&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;cV95nXCEQHx&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Fourth Crop - Supplied&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;crx1340fed2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Email&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;surel@mail.com&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;cySGmwAvtYx&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Fourth Crop - Number of trees plants per ha&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;58&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;dwB0IIRAL5A&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Soil PH&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;eBQSnSkSbXg&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Regen Agri Farm Info UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddRegenAgriFarm}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;fDXsZ7gsDHa&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Fourth Crop - Water usage for irrigation lhayr&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;68&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;fxD5bdAoMDr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Third Economic Crop&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;COCOA&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;g4jH4H7W1TB&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Second Crop - Average production cost USDyr&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;20&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;hbKgHAtm3iK&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Third Crop - Yield kg ha year&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;36&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;hzGDA0IOuA0&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Fifth Crop - Do you want to enter data for Crop&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;iHiXN9QXDN2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;First Crop - Main Crop Area Ha&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;50&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;j3RwAsjqshi&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;First Crop - Do you want to enter data for Crop&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;j3YUcRDdKdz&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Third Crop - Supplied&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;j8pZDCFTSgv&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;First Crop - Age of perennial crops years&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;jM3zZn5pk7A&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Second Crop - Supplied&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;jfXVmCY0Ahq&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Second Crop - Do you want to enter data for Crop&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mFHVVrbGO2p&quot;,&#xd;
                    &quot;fieldName&quot;: &quot; Is there any evidence to submit&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mNxTLBhni3x&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Fourth Economic Crop&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;COFFEE_ARABICA&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;moPU6mUzFB2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date Of The Data Collection&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${__time(yyyy-MM-dd)}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;nTNH9izapFZ&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Second Crop - Total synthetic fertiliser applied NPKurea - kghayr&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;6&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;oR75vB4aYta&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Fourth Crop - Main Crop Area Ha&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;68&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ohr1Mcp8zOr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Percentage of Soil Organic Carbon&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;10&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;pHIVQTyD1II&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Second Crop - Age of perennial crops years&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;36&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;pPwIVUlBUj2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Fourth Crop - Do you want to enter data for Crop&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;paknZLtDFRJ&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Fifth Crop - Predominant typology&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;qjTzNlV4h5B&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Evidence Photo&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;qjTzNlV4h5B_${eventAddRegenAgriFarm}_${eventAddRegenAgriFarm}.jpg&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;rRwqbIZm2ez&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Fourth Crop - Predominant typology&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;rdvYpIsGc7W&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Interviewee&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;qYbeWbBwrEw&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;slU4cnxC2Nf&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;First Crop - Average production cost USDyr&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;5&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;truoCOBeWTd&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Fifth Crop - Water usage for irrigation lhayr&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;41&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;uroJzpzIOuC&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Fifth Crop - Main Crop Area Ha&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;24&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;v5t2KPvDCA5&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Third Crop - Water usage for irrigation lhayr&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;37&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;vGkmSoUrgf7&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Second Crop - Water usage for irrigation (l/ha/yr)&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;x2YWoIwaywa&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Second Crop - Total organic fertiliser applied (kg/ha/yr)&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;6&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/sync_event_kafka</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.status</stringProp>
              <stringProp name="EXPECTED_VALUE">true</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Send to mobile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?ProgramUid=pwTQXERLEz3&amp;ExtUid=${eventAddRegenAgriFarm}&amp;UserName=staging.nescafe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Download Regen Agri Farm Info" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?DateTimeFilter=0&amp;UserName=staging.nescafe&amp;ProgramUid=pwTQXERLEz3</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.rows.pwTQXERLEz3[*].uid</stringProp>
              <stringProp name="EXPECTED_VALUE">${eventAddRegenAgriFarm}</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sync data M&amp;E: Gen &amp; Fam 2020" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;events&quot;: [&#xd;
        {&#xd;
            &quot;coordinate&quot;: {&#xd;
                &quot;latitude&quot;: 0,&#xd;
                &quot;longitude&quot;: 0&#xd;
            },&#xd;
            &quot;created&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;eventDate&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;lastUpdated&quot;: &quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss)}.${__RandomString(3,1234567890)}&quot;,&#xd;
            &quot;orgUnit&quot;: &quot;&quot;,&#xd;
            &quot;program&quot;: &quot;UFP7AL7LDvo&quot;,&#xd;
            &quot;programName&quot;: &quot;M&amp;E : Gender &amp; Family 2020&quot;,&#xd;
            &quot;programStage&quot;: &quot;ERJ5I5LNf4R&quot;,&#xd;
            &quot;status&quot;: &quot;COMPLETED&quot;,&#xd;
            &quot;action&quot;: &quot;TO_UPDATE&quot;,&#xd;
            &quot;event&quot;: &quot;${eventAddMEGenFam2020}&quot;,&#xd;
            &quot;dataValues&quot;: [&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BqSaN1kWCKu&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Enumerator&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;staging nescafe&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FYm3kTx9lAP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Interviewee Person_SINGLE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;gYRebqGqbqg&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FiZb9j3wLmg&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Corrective Actions&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;-&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;MAThs9v2Ewn&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Girls at school level&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;15&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;MjBaCyE7gwT&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Birth year wife or spouse&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1975-02-14&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;NXCDM1ptpIr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date of the data creation&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;P5rrZ7i3yWX&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Year of reporting&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2017&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PEZz37Hxkg2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total Child&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PTmI10q1NiE&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Importance boys school&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;5&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PhvIZoAGgPr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Comments&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;-&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PtueOrx1469&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Pick People_SINGLE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;gYRebqGqbqg&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;QFdGFKjVCLy&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total boys child Family 2020&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Qk3pshkSw8e&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total girls child Family 2020&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;T3NahWL441j&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Education wife or spouse&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;PRIMARY&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ayd6Qh44yVU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddEntity}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;bWM44yVUnIz&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;School attendance rate girls&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;20&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;bbicklQer4f&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;School attendance rate boys&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;20&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;crx1340fed2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Email&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;surel@mail.com&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;jdJam0TFfPt&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Importance girls school&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;5&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mFHVVrbGO2p&quot;,&#xd;
                    &quot;fieldName&quot;: &quot; Is there any evidence to submit&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;moPU6mUzFB2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date Of The Data Collection&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${__time(yyyy-MM-dd)}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;qjTzNlV4h5B&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Evidence Photo&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;qjTzNlV4h5B_${eventAddMEGenFam2020}_${eventAddMEGenFam2020}.jpg&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;rdvYpIsGc7W&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Interviewee&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;gYRebqGqbqg&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;veiU8zPuB3T&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;ME Gender Family 2020 UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddMEGenFam2020}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;wBM5AScZrM7&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Boys at school level&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;20&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/sync_event_kafka</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.status</stringProp>
              <stringProp name="EXPECTED_VALUE">true</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Send to mobile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?ProgramUid=UFP7AL7LDvo&amp;ExtUid=${eventAddMEGenFam2020}&amp;UserName=staging.nescafe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Download M&amp;E: Gen &amp; Fam 2020" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?DateTimeFilter=0&amp;UserName=staging.nescafe&amp;ProgramUid=UFP7AL7LDvo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.rows.UFP7AL7LDvo[*].uid</stringProp>
              <stringProp name="EXPECTED_VALUE">${eventAddMEGenFam2020}</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sync data Cycle 2- 4C Producer - 2020" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;events&quot;: [&#xd;
        {&#xd;
            &quot;coordinate&quot;: {&#xd;
                &quot;latitude&quot;: 0,&#xd;
                &quot;longitude&quot;: 0&#xd;
            },&#xd;
            &quot;created&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;eventDate&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;lastUpdated&quot;: &quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss)}.${__RandomString(3,1234567890)}&quot;,&#xd;
            &quot;orgUnit&quot;: &quot;&quot;,&#xd;
            &quot;program&quot;: &quot;jsbD9tqNEtX&quot;,&#xd;
            &quot;programName&quot;: &quot;Cycle 2- 4C Producer - 2020&quot;,&#xd;
            &quot;programStage&quot;: &quot;owc9eiRv5V8&quot;,&#xd;
            &quot;status&quot;: &quot;COMPLETED&quot;,&#xd;
            &quot;action&quot;: &quot;TO_UPDATE&quot;,&#xd;
            &quot;event&quot;: &quot;${eventAddCy24CPro2020}&quot;,&#xd;
            &quot;dataValues&quot;: [&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ANCkyOyTK38&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;60P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;AffBnCUhr1L&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;25P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BGa04AVqVsg&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;45P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BqSaN1kWCKu&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Enumerator&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;staging nescafe&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;CeSBRTtqNEs&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;11P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;DLr4aYtdJVR&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;61P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;DXqNEvicq95&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;85P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ESMG5StuihC&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;105P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;EkmV2T6wEEJ&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;68P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;F26GsN9ONad&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;41P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;F2Bjry8X9yG&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;75P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FVbJe6OVETV&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Cycle 2 ID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1676344935094&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FYm3kTx9lAP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Interviewee Person_SINGLE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;gYRebqGqbqg&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FiZb9j3wLmg&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Corrective Actions&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;-&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FxjdrBCIljD&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity Name &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;petani 20230214100323&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;GeCtfUIrEUY&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;101P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;GhOmW7oZHXi&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Yes answer minor 2&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;11&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;HAl9Eb9lDga&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;77P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;HF9nMJIR8Hk&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;97P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;HYdNqrdP3ng&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;35P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;He8W6lKE1Ez&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;27P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;JF1Bjt7jAUp&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;8P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;JaiexfHHP4t&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;72P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;KdtN41iNcmt&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;99P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;KlW4hY8pY9s&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;28P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;LJE8i3vJegk&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;24P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;LNXQNPmTuxr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;1P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;M65uAyBrZ6d&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;12P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;MATi0e9ZHYj&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;58P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;N4szAl79AKx&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;44P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;NGvb6V7qk3r&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;59P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;NXCDM1ptpIr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date of the data creation&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2023-02-14 10:22:14&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;NyLiLQxIUNG&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;64P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;OJ231kYO8Gp&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;39P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;OYGUUpSi1la&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;20P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;OyKamwDw4LO&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total Major question major 2&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;76&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;P5rrZ7i3yWX&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Year of reporting&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2018&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;P85qoNJFC5c&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;53P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Pgr5fwVZB6j&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;13P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PhvIZoAGgPr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Comments&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;-&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PxAqZtpHo3c&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total Farm Area&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;39.00&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;R6iSgr8rjwM&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;93P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;RCGazzov4LQ&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;106P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;RmHp5mTv1Ae&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;88P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;RrbHSGp81Zd&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;65P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;SOG148HvYud&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;67P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;SORcZrQMPpj&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Cycle 2- 4C Producer - 2020 UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddCy24CPro2020}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;TLtDIhNiCn9&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;17P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;VGNuFN1ldhP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;16P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;VQDcIVRXBBD&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;2P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;WjbhVFdFC7l&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;98P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;XPxP3onLAjv&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;62P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;XURZO54ux5P&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;70P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;XWZ8kDgajjG&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;5P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Xntvn4kQg0n&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;32P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;XuSNOf0pzHH&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;92P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;XvXl5t5bYrT&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;76P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Z1uKlgxYkvA&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;91P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Z2vKmi43t9u&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;82P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Z47CY1CqRV5&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;69P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ZR0UK1vN2nm&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Not applicable major 2&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;27&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ZXVjyWVrY6d&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;87P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;aG5QmSlI4H2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;79P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ayd6Qh44yVU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddEntity}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;b9OOdp4euSM&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Yes answer major 2&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;39&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;bEueOsz8W6i&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;18P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;blU0OpnHvZv&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;42P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;cNZXoGnzOqr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;40P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;cQmPbdlBUk4&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;34P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;crx1340fed2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Email&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;surel@mail.com&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;eFo84mW1TEV&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;96P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;f4mYEPRXFRI&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;102P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;fnRekdkh6Ca&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;74P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;fqbKgHEB3UB&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;6P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;g5odatUffBl&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;86P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;gBHiYTW4YRM&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;51P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;gNIBun7zPxP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;36P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;gbMs5fwVZAz&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;73P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;gvz23wRBWqU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;23P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;h2S1YYwtTW4&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;104P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;hBFZvkodaub&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;80P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;hQU1OpmEfWO&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;26P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;hk2lWDO8Izo&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;30P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;i6kI5LLXWoI&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;52P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;i7nUusWrY1G&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;66P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;isdQ1gCoGnz&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;63P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;j1G8gq0Lbo3&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;No answer minor 2&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;7&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;jWoJyjac8eh&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;33P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;kRJ8UvyvZwl&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;48P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;kyzsGYm75sy&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;9P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;kz259J0r8w8&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;84P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;l4Rqhr0F8hz&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;38P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;l7fmmOT0S84&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;71P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;lWl4u8kEn7z&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;100P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;lrL1s1R2duV&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;83P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mFHVVrbGO2p&quot;,&#xd;
                    &quot;fieldName&quot;: &quot; Is there any evidence to submit&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mTNHAqUpVsi&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;37P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mb5Oaa3G6V6&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;10P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;meHHSEgXTdY&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;29P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;moPU6mUzFB2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date Of The Data Collection&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2023-02-14&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mtVfgE08Ri3&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;7P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;n4H3DqL6Hwg&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;89P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;nl9FicnxC1H&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Not applicable minor 2&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;11&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;no0Nnflenrk&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;49P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ntOAX0DvpCM&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;81P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;o0r8uz4BZB2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;47P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;oapBM30iQoe&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;14P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;p2zhKS871bp&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;19P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;pAjwLni42pp&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;43P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;puKmi6BThtB&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;3P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;pyhPnbSI0vT&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;50P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;qjTzNlV4h5B&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Evidence Photo&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;qjTzNlV4h5B_${eventAddCy24CPro2020}_${eventAddCy24CPro2020}.jpg&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;qlZRI3AZx5O&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;103P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;qmfq2VGhUCP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;15P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;rLUFb7YLr7o&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;55P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;rdvYpIsGc7W&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Interviewee&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;gYRebqGqbqg&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;sKLbp7xEDDH&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;46P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;swMtzFvueNn&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;4P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ti9ORrl61dy&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;90P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;v5sxzvUWzCv&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;No answer major 2&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;10&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;vBSXB2adGHU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;31P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;vOU80SDSTrg&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;94P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;vOV92bkkLJP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;78P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;w0NmXEPAUmF&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;57P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;wSi1ldlh2wQ&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;95P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;wX7lKF5Sw8g&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;56P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;wrhppUpVuoD&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;54P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;xDTX9w7YJlf&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total Minor question minor 2&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;29&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;xIvWggDsZ3N&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;21P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/sync_event_kafka</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.status</stringProp>
              <stringProp name="EXPECTED_VALUE">true</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Send to mobile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?ProgramUid=jsbD9tqNEtX&amp;ExtUid=${eventAddCy24CPro2020}UserName=staging.nescafe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Download Cycle 2- 4C Producer - 2020" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?DateTimeFilter=0&amp;UserName=staging.nescafe&amp;ProgramUid=jsbD9tqNEtX</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.rows.jsbD9tqNEtX[*].uid</stringProp>
              <stringProp name="EXPECTED_VALUE">${eventAddCy24CPro2020}</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sync data Cycle 1- 4C Producer - 2020" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;events&quot;: [&#xd;
        {&#xd;
            &quot;coordinate&quot;: {&#xd;
                &quot;latitude&quot;: 0,&#xd;
                &quot;longitude&quot;: 0&#xd;
            },&#xd;
            &quot;created&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;eventDate&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;lastUpdated&quot;: &quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss)}.${__RandomString(3,1234567890)}&quot;,&#xd;
            &quot;orgUnit&quot;: &quot;&quot;,&#xd;
            &quot;program&quot;: &quot;q8RemkFuYxt&quot;,&#xd;
            &quot;programName&quot;: &quot;Cycle 1- 4C Producer - 2020 &quot;,&#xd;
            &quot;programStage&quot;: &quot;HiPoed6Qgzf&quot;,&#xd;
            &quot;status&quot;: &quot;COMPLETED&quot;,&#xd;
            &quot;action&quot;: &quot;TO_UPDATE&quot;,&#xd;
            &quot;event&quot;: &quot;${eventAddCy14CPro2020}&quot;,&#xd;
            &quot;dataValues&quot;: [&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ANCkyOyTK38&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;60P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ARW7sqRYIfH&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;No answer minor 1&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;14&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;AffBnCUhr1L&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;25P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BGa04AVqVsg&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;45P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BqSaN1kWCKu&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Enumerator&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;staging nescafe&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;CeSBRTtqNEs&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;11P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;DLr4aYtdJVR&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;61P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;DXqNEvicq95&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;85P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ESMG5StuihC&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;105P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;EkmV2T6wEEJ&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;68P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;F26GsN9ONad&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;41P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;F2Bjry8X9yG&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;75P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FYm3kTx9lAP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Interviewee Person_SINGLE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;rQGebeqQgQw&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FiZb9j3wLmg&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Corrective Actions&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;-&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FxjdrBCIljD&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity Name &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;petani 20230214110732&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;GeCtfUIrEUY&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;101P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;HAl9Eb9lDga&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;77P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;HF9nMJIR8Hk&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;97P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;HYdNqrdP3ng&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;35P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;He8W6lKE1Ez&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;27P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;JF1Bjt7jAUp&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;8P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;JaiexfHHP4t&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;72P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;JnmJ6NU6u2I&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Yes answer major 1&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;19&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;KdtN41iNcmt&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;99P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;KlW4hY8pY9s&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;28P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;LJE8i3vJegk&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;24P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;LNXQNPmTuxr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;1P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;M3nekcfLZfT&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;No answer major 1&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;7&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;M65uAyBrZ6d&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;12P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;MATi0e9ZHYj&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;58P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;N4szAl79AKx&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;44P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;NGvb6V7qk3r&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;59P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;NXCDM1ptpIr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date of the data creation&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2023-02-14 11:20:39&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;NyLiLQxIUNG&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;64P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;OJ231kYO8Gp&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;39P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;OYGUUpSi1la&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;20P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;P5rrZ7i3yWX&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Year of reporting&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2017&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;P85qoNJFC5c&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;53P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Pgr5fwVZB6j&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;13P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PhvIZoAGgPr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Comments&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;-&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PxAqZtpHo3c&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total Farm Area&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;39.00&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;R6iSgr8rjwM&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;93P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;RCGazzov4LQ&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;106P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;RmHp5mTv1Ae&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;88P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;RrbHSGp81Zd&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;65P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;SOG148HvYud&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;67P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;TLtDIhNiCn9&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;17P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;VGNuFN1ldhP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;16P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;VQDcIVRXBBD&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;2P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;WjbhVFdFC7l&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;98P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Wkg1s3aeHLk&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Cycle 1- 4C Producer - 2020 UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddCy14CPro2020}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;XPxP3onLAjv&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;62P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;XURZO54ux5P&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;70P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;XWZ8kDgajjG&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;5P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Xntvn4kQg0n&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;32P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;XuSNOf0pzHH&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;92P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;XvXl5t5bYrT&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;76P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;YGFHWY6bb3H&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total Minor question 1&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;67&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Z1uKlgxYkvA&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;91P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Z2vKmi43t9u&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;82P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Z47CY1CqRV5&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;69P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ZXVjyWVrY6d&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;87P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;aG5QmSlI4H2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;79P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ayd6Qh44yVU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddEntity}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;bErOFvfPt6d&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;22P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;bEueOsz8W6i&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;18P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;blU0OpnHvZv&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;42P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;cNZXoGnzOqr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;40P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;cQmPbdlBUk4&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;34P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;crx1340fed2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Email&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;surel@mail.com&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;dV6nVzGFIXf&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total Major question 1&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;39&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;dxIUOLQt2JL&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Not applicable major 1&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;13&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;eFo84mW1TEV&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;96P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;f4mYEPRXFRI&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;102P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;fnRekdkh6Ca&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;74P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;fqbKgHEB3UB&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;6P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;g5odatUffBl&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;86P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;gBHiYTW4YRM&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;51P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;gNIBun7zPxP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;36P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;gbMs5fwVZAz&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;73P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;gvz23wRBWqU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;23P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;h2S1YYwtTW4&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;104P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;hBFZvkodaub&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;80P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;hQU1OpmEfWO&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;26P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;hk2lWDO8Izo&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;30P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;i6kI5LLXWoI&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;52P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;i7nUusWrY1G&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;66P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;isdQ1gCoGnz&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;63P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;jWoJyjac8eh&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;33P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;kPCfWRW7oaM&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Yes answer minor 1&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;27&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;kRJ8UvyvZwl&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;48P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;kyzsGYm75sy&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;9P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;kz259J0r8w8&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;84P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;l4Rqhr0F8hz&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;38P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;l7fmmOT0S84&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;71P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;lWl4u8kEn7z&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;100P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;lrL1s1R2duV&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;83P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mFHVVrbGO2p&quot;,&#xd;
                    &quot;fieldName&quot;: &quot; Is there any evidence to submit&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mTNHAqUpVsi&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;37P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mb5Oaa3G6V6&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;10P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;meHHSEgXTdY&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;29P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;moPU6mUzFB2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date Of The Data Collection&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2023-02-14&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mtVfgE08Ri3&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;7P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;n4H3DqL6Hwg&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;89P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;no0Nnflenrk&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;49P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ntOAX0DvpCM&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;81P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;nzuO6K1vN0h&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Not applicable minor 1&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;26&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;o0r8uz4BZB2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;47P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;oapBM30iQoe&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;14P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;p2zhKS871bp&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;19P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;pAjwLni42pp&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;43P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;puKmi6BThtB&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;3P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;pyhPnbSI0vT&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;50P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;qjTzNlV4h5B&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Evidence Photo&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;qjTzNlV4h5B_${eventAddCy14CPro2020}_${eventAddCy14CPro2020}.jpg&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;qlZRI3AZx5O&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;103P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;qmfq2VGhUCP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;15P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;rLUFb7YLr7o&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;55P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;rdvYpIsGc7W&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Interviewee&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;rQGebeqQgQw&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;sKLbp7xEDDH&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;46P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;swMtzFvueNn&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;4P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ti9ORrl61dy&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;90P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;tu8lGwfOpk5&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Cycle 1 ID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1676348439821&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;vBSXB2adGHU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;31P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;vOU80SDSTrg&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;94P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;vOV92bkkLJP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;78P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;w0NmXEPAUmF&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;57P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;wSi1ldlh2wQ&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;95P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;wX7lKF5Sw8g&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;56P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;wrhppUpVuoD&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;54P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;xIvWggDsZ3N&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;21P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/sync_event_kafka</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.status</stringProp>
              <stringProp name="EXPECTED_VALUE">true</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Send to mobile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?ProgramUid=q8RemkFuYxt&amp;ExtUid=${eventAddCy14CPro2020}&amp;UserName=staging.nescafe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Download Cycle 1- 4C Producer - 2020" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?DateTimeFilter=0&amp;UserName=staging.nescafe&amp;ProgramUid=q8RemkFuYxt</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.rows.q8RemkFuYxt[*].uid</stringProp>
              <stringProp name="EXPECTED_VALUE">${eventAddCy14CPro2020}</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sync data Cycle 3- 4C Producer - 2020" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;events&quot;: [&#xd;
        {&#xd;
            &quot;coordinate&quot;: {&#xd;
                &quot;latitude&quot;: 0,&#xd;
                &quot;longitude&quot;: 0&#xd;
            },&#xd;
            &quot;created&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;eventDate&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;lastUpdated&quot;: &quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss)}.${__RandomString(3,1234567890)}&quot;,&#xd;
            &quot;orgUnit&quot;: &quot;&quot;,&#xd;
            &quot;program&quot;: &quot;j8qff8W4bgR&quot;,&#xd;
            &quot;programName&quot;: &quot;Cycle 3- 4C Producer - 2020&quot;,&#xd;
            &quot;programStage&quot;: &quot;TDFQEkplBUh&quot;,&#xd;
            &quot;status&quot;: &quot;COMPLETED&quot;,&#xd;
            &quot;action&quot;: &quot;TO_UPDATE&quot;,&#xd;
            &quot;event&quot;: &quot;${eventAddCy34CPro2020}&quot;,&#xd;
            &quot;dataValues&quot;: [&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ANCkyOyTK38&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;60P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;AffBnCUhr1L&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;25P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BGa04AVqVsg&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;45P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BqSaN1kWCKu&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Enumerator&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;staging nescafe&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;CeSBRTtqNEs&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;11P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;DLr4aYtdJVR&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;61P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;DXqNEvicq95&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;85P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ESMG5StuihC&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;105P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;EkmV2T6wEEJ&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;68P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;F26GsN9ONad&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;41P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;F2Bjry8X9yG&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;75P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FiZb9j3wLmg&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Corrective Actions&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;-&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FxjdrBCIljD&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity Name &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;petani 20230214110732&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;GeCtfUIrEUY&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;101P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;HAl9Eb9lDga&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;77P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;HF9nMJIR8Hk&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;97P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;HYdNqrdP3ng&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;35P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;He8W6lKE1Ez&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;27P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;J7I0yhPognk&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total Major question major 3&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;99&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;JF1Bjt7jAUp&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;8P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;JaiexfHHP4t&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;72P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;KdtN41iNcmt&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;99P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;KlW4hY8pY9s&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;28P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;LJE8i3vJegk&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;24P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;LNXQNPmTuxr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;1P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;M65uAyBrZ6d&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;12P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;MATi0e9ZHYj&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;58P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;MyR8884mXFQ&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Yes answer major 3&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;43&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;N4szAl79AKx&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;44P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;NGvb6V7qk3r&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;59P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;NXCDM1ptpIr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date of the data creation&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2023-02-14 11:27:01&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;NyLiLQxIUNG&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;64P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;OJ231kYO8Gp&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;39P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;OYGUUpSi1la&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;20P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;P5rrZ7i3yWX&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Year of reporting&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2019&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;P85qoNJFC5c&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;53P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Pgr5fwVZB6j&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;13P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PhvIZoAGgPr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Comments&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;-&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PxAqZtpHo3c&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total Farm Area&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;39.00&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;R6iSgr8rjwM&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;93P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;RCGazzov4LQ&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;106P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;RmHp5mTv1Ae&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;88P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;RrbHSGp81Zd&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;65P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;SOG148HvYud&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;67P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;TLtDIhNiCn9&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;17P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;VGNuFN1ldhP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;16P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;VQDcIVRXBBD&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;2P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;WjbhVFdFC7l&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;98P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;WqBEWhnguKl&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;No answer major 3&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;18&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;XPxP3onLAjv&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;62P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;XURZO54ux5P&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;70P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;XWZ8kDgajjG&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;5P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;XXeSBNCiok9&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Cycle 3- 4C Producer - 2020 UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddCy34CPro2020}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Xntvn4kQg0n&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;32P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;XuSNOf0pzHH&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;92P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;XvXl5t5bYrT&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;76P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Z1uKlgxYkvA&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;91P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Z2vKmi43t9u&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;82P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Z47CY1CqRV5&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;69P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ZXVjyWVrY6d&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;87P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;aG5QmSlI4H2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;79P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ayd6Qh44yVU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddEntity}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;bErOFvfPt6d&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;22P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;bEueOsz8W6i&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;18P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;blU0OpnHvZv&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;42P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;cNZXoGnzOqr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;40P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;cQmPbdlBUk4&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;34P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;crx1340fed2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Email&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;surel@mail.com&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;eFo84mW1TEV&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;96P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;f4mYEPRXFRI&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;102P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;fnRekdkh6Ca&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;74P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;fqbKgHEB3UB&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;6P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;g5odatUffBl&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;86P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;gBHiYTW4YRM&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;51P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;gNIBun7zPxP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;36P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;gbMs5fwVZAz&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;73P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;gj4yUMCnAM8&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total area ha nescafe&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;0&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;gvz23wRBWqU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;23P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;h2S1YYwtTW4&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;104P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;hBFZvkodaub&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;80P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;hQU1OpmEfWO&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;26P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;hk2lWDO8Izo&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;30P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;i6kI5LLXWoI&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;52P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;i7nUusWrY1G&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;66P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;isdQ1gCoGnz&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;63P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;jWoJyjac8eh&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;33P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;jy3AaDB8v5T&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total Minor question minor 3&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;6&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;kRJ8UvyvZwl&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;48P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;kyzsGYm75sy&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;9P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;kz259J0r8w8&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;84P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;l4Rqhr0F8hz&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;38P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;l7fmmOT0S84&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;71P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;lWl4u8kEn7z&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;100P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;lrL1s1R2duV&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;83P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;m17LGoPSwmE&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;No answer minor 3&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mEC9xBtjoj4&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Not applicable major 3&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;38&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mFHVVrbGO2p&quot;,&#xd;
                    &quot;fieldName&quot;: &quot; Is there any evidence to submit&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mTNHAqUpVsi&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;37P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mb5Oaa3G6V6&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;10P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;meHHSEgXTdY&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;29P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;moPU6mUzFB2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date Of The Data Collection&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2023-02-14&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mtVfgE08Ri3&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;7P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;n4H3DqL6Hwg&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;89P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;no0Nnflenrk&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;49P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ntOAX0DvpCM&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;81P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;o0r8uz4BZB2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;47P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;oE4SzMkQlOW&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Not applicable minor 3&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;0&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;oNpqY5aXm76&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Yes answer minor 3&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;5&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;oapBM30iQoe&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;14P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;p2zhKS871bp&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;19P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;pAjwLni42pp&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;43P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;puKmi6BThtB&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;3P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;pyhPnbSI0vT&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;50P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;qYYxvb4Odnv&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Cycle 3 ID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1676348821807&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;qjTzNlV4h5B&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Evidence Photo&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;qjTzNlV4h5B_${eventAddCy34CPro2020}_${eventAddCy34CPro2020}.jpg&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;qlZRI3AZx5O&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;103P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;qmfq2VGhUCP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;15P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;rLUFb7YLr7o&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;55P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;rdvYpIsGc7W&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Interviewee&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;rQGebeqQgQw&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;sKLbp7xEDDH&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;46P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;swMtzFvueNn&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;4P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ti9ORrl61dy&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;90P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;vBSXB2adGHU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;31P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;vOU80SDSTrg&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;94P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;vOV92bkkLJP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;78P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;w0NmXEPAUmF&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;57P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;wSi1ldlh2wQ&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;95P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;wX7lKF5Sw8g&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;56P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;wrhppUpVuoD&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;54P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;xIvWggDsZ3N&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;21P Cycle 4C &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/sync_event_kafka</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.status</stringProp>
              <stringProp name="EXPECTED_VALUE">true</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Send to mobile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?ProgramUid=q8RemkFuYxt;j8qff8W4bgR&amp;ExtUid=${eventAddCy34CPro2020}&amp;UserName=staging.nescafe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Download Cycle 3- 4C Producer - 2020" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?DateTimeFilter=0&amp;UserName=staging.nescafe&amp;ProgramUid=j8qff8W4bgR</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.rows.j8qff8W4bgR[*].uid</stringProp>
              <stringProp name="EXPECTED_VALUE">${eventAddCy34CPro2020}</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sync data FAT Coffee ver 2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;events&quot;: [&#xd;
        {&#xd;
            &quot;coordinate&quot;: {&#xd;
                &quot;latitude&quot;: 0,&#xd;
                &quot;longitude&quot;: 0&#xd;
            },&#xd;
            &quot;created&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;eventDate&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;lastUpdated&quot;: &quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss)}.${__RandomString(3,1234567890)}&quot;,&#xd;
            &quot;orgUnit&quot;: &quot;&quot;,&#xd;
            &quot;program&quot;: &quot;WgOmW7srWtg&quot;,&#xd;
            &quot;programName&quot;: &quot;Regen AG - Farm Assessment - FAT Coffee ver 2&quot;,&#xd;
            &quot;programStage&quot;: &quot;qNf1wVWx2AZ&quot;,&#xd;
            &quot;status&quot;: &quot;COMPLETED&quot;,&#xd;
            &quot;action&quot;: &quot;TO_UPDATE&quot;,&#xd;
            &quot;event&quot;: &quot;${eventAddFATCoffeever2}&quot;,&#xd;
            &quot;dataValues&quot;: [&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ApRYGYm3lXF&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Soil conservation 04&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;B5esEPDgZfU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Crop Nutrition 06&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BBCIjchUDQM&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Regen AG - Farm Assessment - FAT Coffee ver 2 UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddFATCoffeever2}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BCIjab7YIfI&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Coffee plot Soil is covered throughout the year 2&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BM452nfpyBv&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Crop Nutrition 05&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;5&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BqSaN1kWCKu&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Enumerator&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;staging nescafe&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;CtcGMpqdRAN&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;There is wet processing in the farm&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;DrQQfvRFo7z&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Chemical inputs and Weed management 01&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FYm3kTx9lAP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Interviewee Person_SINGLE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;rQGebeqQgQw&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FiZb9j3wLmg&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Corrective Actions&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;-&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FxjdrBCIljD&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity Name &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;petani 20230214110732&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Fzyker5kNRy&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Soil conservation 03&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;GYksx147CWs&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT Ver 2 - Min 25 of the FAT score&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;H7PdiYSVy9d&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Chemical inputs and Weed management 02&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;HXbEEGWcLiP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total 22Q&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;0&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;HYhg9X6fuMy&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT Ver 2 - Responsible Sourcing&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Hxb01wSLEwn&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Annual Application of organic fertilizer or compost or biochar&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;I7OSyISEfQy&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Water Footprint 03&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ISAL30kXJns&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Supply chain farmers Received a comprehensive training&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;IXWqTj2opUq&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 -  Fertilization based on Biennial Soil analyses 2&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;JiJJQ4qshgB&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Water Source Protection 05&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;5&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;KJGFKhLUFcC&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Water Source Protection 06&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;KuDCBCHgMe1&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Crop Nutrition 07&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;LfygKVK2yYm&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Supply chain farmers Received training on the concept of reg agri&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Lohs6h42rzE&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Crop Nutrition 10&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;14&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;NQfq7qis6h0&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total 28 Q&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;15.75&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;NXCDM1ptpIr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date of the data creation&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PFeMf8Ri577&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Water Footprint 02&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;8&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PhvIZoAGgPr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Comments&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;-&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Q1QxHP5zWXw&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Min 50 of the FAT score&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Q4h9QbWge4B&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Soil conservation 01&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;QfgIFDCBCIg&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Water Footprint 01&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;6&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;QqVupEXrWqU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Rejuvenation and Renovation 04&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;RIo0Orwub9i&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Total Calculations&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;15.75&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;RoMDrSZKlfr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Crop Nutrition 11&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;50&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;SEPDfYdKdxk&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;POC Unit&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1608&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;SeWScXfXZ3M&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Water Footprint 05&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;U06LF8gsA7r&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Water Footprint 06&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;UhbjkLKUJvW&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT Coffee ver 2 - Do you perform regularly a soil analysis lab soil test kit&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Uub8ekaYqPL&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Farm Economics 02&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;15&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;VREfVM7J5H3&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Min 75 of the FAT score&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;VdAoPPiAY4X&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT Coffee ver 2 ID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1676364328262&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;WdD0CpNIAnH&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Annual application of organic fertilizer or compost or biochar Minimum more than 50 of the field acreage&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Wo1TCSUuvhZ&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;There is water body in the farm&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;WxlpcUThwRE&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Natural Habitat 05&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;4&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Y2yatUfgHC2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Farm Economics 01&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;YbtTY1QxITI&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Year of reporting 2022&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2023&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;YiOiBdUMBhk&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;50 percent 28Q&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;a3xVTj53rz9&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total 24Q&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;0&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;a8MF4ObgPsz&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;There is irrigation in the farm&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ayd6Qh44yVU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddEntity}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;buDEO4yVScY&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total 26Q&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;0&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;crx1340fed2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Email&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;surel@mail.com&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;cvB6g2tEMyb&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Competencies 03&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;dQg0nmMJMjN&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - No chemical herbicide application&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;e1ahZa6ZN1n&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT - Crop Nutrition 12&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;12&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;egwSI0wXggA&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Calculation ver 1&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;15.75&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;fnMIE7gxWcK&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT Level&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;gNKNjMS5qpR&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Coffee plot Soil is covered throughout the year rather through cover crops&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;jERLDwrIow8&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT Score Achieve&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;15.75&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;jbrcLlZPBY5&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Natural Habitat 06&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;jpJyhPrtjnb&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Chemical inputs and Weed management 03&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;kJkbdnHtTVz&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Water Footprint 04&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;l4QnW5g0oux&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Agro-forestry or Intercropping 08&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;lcAsfYdLhF3&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Fertilization based on Biennial Soil analyses&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mFHVVrbGO2p&quot;,&#xd;
                    &quot;fieldName&quot;: &quot; Is there any evidence to submit&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mXjppSgtFQC&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT Ver 2 - Advanced&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;0&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;moPU6mUzFB2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date Of The Data Collection&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${__time(yyyy-MM-dd)}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;nP3pqY5aWhk&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total Question FAT Coffee 2&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;28&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;niYTW4chT7y&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Annual Monitoring and recording total water usage at the farm if applicable &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;qIHNr1LWRRk&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Versioning use FAT Coffee 2&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;qjTzNlV4h5B&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Evidence Photo&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;qjTzNlV4h5B_${eventAddFATCoffeever2}_${eventAddFATCoffeever2}.jpg&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;rdvYpIsGc7W&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Interviewee&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;rQGebeqQgQw&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;s3s4XKvP8Fi&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT Ver 2 - Supply Chain Farmers Trained in good agricultural practices&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;saYsZ3MWODk&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;75 percent 28Q&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;svGO3s4ZSRe&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Agro-forestry or Intercropping 07&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;tmUyApSgtB3&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Agro-forestry or Intercropping 09&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;8&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;uDcIUPOadBx&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Competencies 02&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ufq2UDRNSyI&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;25 percent 28Q&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;wSj8HrJp2VG&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;FAT ver 2 - Crop Nutrition 08&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;15&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/sync_event_kafka</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.status</stringProp>
              <stringProp name="EXPECTED_VALUE">true</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Send to mobile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?ProgramUid=WgOmW7srWtg&amp;ExtUid=${eventAddFATCoffeever2}&amp;UserName=staging.nescafe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Download FAT Coffee ver 2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?DateTimeFilter=0&amp;UserName=staging.nescafe&amp;ProgramUid=WgOmW7srWtg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.rows.WgOmW7srWtg[*].uid</stringProp>
              <stringProp name="EXPECTED_VALUE">${eventAddFATCoffeever2}</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sync data All Crop Ver 2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;events&quot;: [&#xd;
        {&#xd;
            &quot;coordinate&quot;: {&#xd;
                &quot;latitude&quot;: 0,&#xd;
                &quot;longitude&quot;: 0&#xd;
            },&#xd;
            &quot;created&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;eventDate&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;lastUpdated&quot;: &quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss)}.${__RandomString(3,1234567890)}&quot;,&#xd;
            &quot;orgUnit&quot;: &quot;&quot;,&#xd;
            &quot;program&quot;: &quot;D7i42psggBj&quot;,&#xd;
            &quot;programName&quot;: &quot;Regen AG Farm Assessment - All Crop Ver 2&quot;,&#xd;
            &quot;programStage&quot;: &quot;U2IE9rhiMXO&quot;,&#xd;
            &quot;status&quot;: &quot;COMPLETED&quot;,&#xd;
            &quot;action&quot;: &quot;TO_UPDATE&quot;,&#xd;
            &quot;event&quot;: &quot;${eventAddAllCropVer2}&quot;,&#xd;
            &quot;dataValues&quot;: [&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;A0IKcyp1UGg&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total Score Achieved&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1434&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ADOBcJcyrBC&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Conditions for Pioneering&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Al64rwxo3cn&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;All Crop - Agroforestry 05_bycode&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BOAWwwkmTsn&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Treshold for ADVANCED&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;717&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BqSaN1kWCKu&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Enumerator&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;staging nescafe&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;CUdYjndc16H&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;All Crop - SOM Trend 11&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;EsRRj8HuUcR&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Avg Biodiversity&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;64.16667&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FYm3kTx9lAP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Interviewee Person_SINGLE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;rQGebeqQgQw&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FiZb9j3wLmg&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Corrective Actions&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;-&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;GyoxnJ5I5LJ&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Treshold for PIONEERING&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1075.5&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;HGGOzcveHIW&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Treshold for Engaged&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;358.5&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;I33xQ9FidrC&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;All Crop - SOM 09&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;0&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Ipw4KJPzVPO&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;All Crop - Soil Protection 06_bycode&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;4&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;KJJTEfOs2KR&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;All Crop - Regenerative 01&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;LrwysJpzGEG&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;All Crop - Waterways 05_bycode&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;4&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;NXCDM1ptpIr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date of the data creation&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Ni7Ehajg5BZ&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Avg Competencies&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;91.66667&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;P5rrZ7i3yWX&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Year of reporting&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2015&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PK4AVtjpnK6&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;All Crop - Crop Protection 01&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;4&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PQbWfcvYugW&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;All Crop - Irrigation 03&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PhvIZoAGgPr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Comments&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;-&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Pw2CoFhYXrX&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;All Crop - Crop Rotation 04&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;4&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;SOTi0hKR2e3&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;All Crop - Soil Protection 05&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;4&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;TZ2HoOPi9Re&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;All Crop - Soil Cover 02&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;UrPH4H6SqdX&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;All Crop - Tech Savvyness 03&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;4&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Wkg31memoW3&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;All Crop - Crop Nutrition 08&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;4&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;YXY3MXSUx9e&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Avg Soil&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;37.41667&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;a2tB9zMf5Di&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;All Crop - Farm Records 02&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ayd6Qh44yVU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddEntity}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;bbhWN9QXHc7&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;All Crop - Synthetic N Used 10&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;0&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;crx1340fed2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Email&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;surel@mail.com&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;eORrpMEta9k&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;All Crop - Waterways 04_bycode&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;eUx9gr6h58D&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;All Crop - Crop Diversity 03&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;gJyiVEWkzWU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Conditions for Advanced&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;hUpRbWdTK49&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;All Crop - Crop Protection 02_bycode&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;hyk51gCqPNV&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Avg Water&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;65&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;itku6bZugUH&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;All Crop - Biodiversity 04_bycode&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;jpNEvkmW7qh&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;All Crop - Biodiversity Action Plan 06&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;kKoutbD5ciV&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Regen AG Farm Assessment - All Crop Ver 2 UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
	                    &quot;value&quot;: &quot;${eventAddAllCropVer2}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mFHVVrbGO2p&quot;,&#xd;
                    &quot;fieldName&quot;: &quot; Is there any evidence to submit&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mLlcb3EudJU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;All Crop - Water Use 02&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mdD1G7cYpGj&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;All Crop - Water Use 01&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mnzNpnLAgiO&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Signature Assesment&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;mnzNpnLAgiO_${eventAddAllCropVer2}_${eventAddAllCropVer2}.jpg&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mo7yMjOfxd9&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;All Crop - Soil Health Assessment 07&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;6&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;moPU6mUzFB2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date Of The Data Collection&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${__time(yyyy-MM-dd)}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;qjTzNlV4h5B&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Evidence Photo&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;qjTzNlV4h5B_${eventAddAllCropVer2}_${eventAddAllCropVer2}.jpg&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;rIArZusTbRD&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;All Crop - Soil Tillage 01&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;rdvYpIsGc7W&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Interviewee&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;rQGebeqQgQw&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ryZpCNVreVP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Conditions for Engaged&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;tphs7nSnOSw&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;All Crop - Weed Management 03_bycode&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;4&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;xefDxuXoHp6&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;All Crop - Crop Residue 12&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/sync_event_kafka</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.status</stringProp>
              <stringProp name="EXPECTED_VALUE">true</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Send to mobile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?ProgramUid=D7i42psggBj&amp;ExtUid=${eventAddAllCropVer2}&amp;UserName=staging.nescafe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Download All Crop Ver 2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?DateTimeFilter=0&amp;UserName=staging.nescafe&amp;ProgramUid=D7i42psggBj</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.rows.D7i42psggBj[*].uid</stringProp>
              <stringProp name="EXPECTED_VALUE">${eventAddAllCropVer2}</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sync data All Crop" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;events&quot;: [&#xd;
        {&#xd;
            &quot;coordinate&quot;: {&#xd;
                &quot;latitude&quot;: 0,&#xd;
                &quot;longitude&quot;: 0&#xd;
            },&#xd;
            &quot;created&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;eventDate&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;lastUpdated&quot;: &quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss)}.${__RandomString(3,1234567890)}&quot;,&#xd;
            &quot;orgUnit&quot;: &quot;&quot;,&#xd;
            &quot;program&quot;: &quot;Ywc5PfwVbIZ&quot;,&#xd;
            &quot;programName&quot;: &quot;Regen AG Farm Assessment - All Crop&quot;,&#xd;
            &quot;programStage&quot;: &quot;CJmmMLWM8NK&quot;,&#xd;
            &quot;status&quot;: &quot;COMPLETED&quot;,&#xd;
            &quot;action&quot;: &quot;TO_UPDATE&quot;,&#xd;
            &quot;event&quot;: &quot;${eventAddAllCrop}&quot;,&#xd;
            &quot;dataValues&quot;: [&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Aw02zhNcp8z&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Do you keep farm records&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BCHeBtfYZ5U&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Are you applying chemical herbicides in your farm&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BnHnxCzBrWs&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Do you conduct a soil analysis at least once every 3 years or more frequent&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BqSaN1kWCKu&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Enumerator&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;staging nescafe&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;By3AZC7oX9x&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;What is the percentage of agriculture land dedicated to agroforestry&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;DHXfXZ6YLtG&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Have you experienced a cash flow shortage period during the last year&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;DSUsiokNH8e&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Soil pH&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;0&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;EO68GibgTEX&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;What is the soil organic matter level in your soils&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;0&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;EveNlU1S4ma&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Percentage organic fertiliser vs total fertiliser applied&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;0&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FYm3kTx9lAP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Interviewee Person_SINGLE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;rQGebeqQgQw&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FiZb9j3wLmg&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Corrective Actions&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;&quot;,&#xd;
                    &quot;value&quot;: &quot;-&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;H3TlFmyNnhx&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Do you implement any form of erosion control&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;HDy4ErNAY8o&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Do you compost your farm residues formal composting process&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;K3uGRIxkiUq&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Are the riparian buffer strips covered with natural vegetation&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;KT6u4QpfiQo&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;What is the percentage of coffee and or cocoa treestock with new improved variaties&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;4&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;KzgHBzBoL9V&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Number of years farm has been in use&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2023&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;MSsoGkodZpG&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;What is the percentage of crop land planted with cover crops&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Mu6dhS1Ya7b&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;What is the percentage of farmland with biodiversity infrastructures&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;4&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;NLHBx3Cjs2O&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Water footprint for total crop produced &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;0&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;NXCDM1ptpIr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date of the data creation&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;O5ogorhngr4&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Do you keep bee hives in your farm&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;O72f5FqJuPC&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;On average for how many months the soil is covered by an annual crop&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;P1TCSTqdTK4&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;What is the percentage of cropland with synthetic herbicide application_multiline&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;P5rrZ7i3yWX&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Year of reporting&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2019&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PIuTTpW0GC3&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Do you have received training on Farm Economics and Business Skills&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PhvIZoAGgPr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Comments&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;&quot;,&#xd;
                    &quot;value&quot;: &quot;-&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;RgiOewYoBPL&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;What is the percentage of shade cover on the permanent cropland&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;SJlh42r1JPx&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Which irrigation practices do you apply&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;SvsPJ9dZpFc&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Number of different commercial species crops in the farm&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;0&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;U8j9MDqNEtX&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Do you calculate your fertilizer plan on the basis of crop nutrient requirements&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Uo9AGgR0WQQ&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Which integrated weed management practices do you apply&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;W00pyBvsQNT&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;What is the shortest distance between field and the water body&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;5&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Wvb5RqhnkAR&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Do you follow the 4R principles when applying fertilizers&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;WxllNQt1CqP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;What is the percentage of permanent crop land intercropped with multiple commercial crops&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;YfCrUiwMs7m&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Number of different shade tree species&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;20&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ZNf48GrInts&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Regen AG Farm Assessment - All Crop ID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1676370322608&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;a58HqEUbMtA&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Result&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;aT6sy133wKk&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Synthetic Fertilizer Productivity&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;0&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;adykgzlgziS&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Do you follow the IPM principles for crop protection_multiline&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ayd6Qh44yVU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddEntity}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;bDoAKxc7V1R&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Estimated household income from the farm USD per year&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;0&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;bzd4DkwHUOO&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;What is the percentage of agricultural land with severe water and wind erosion&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;crx1340fed2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Email&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;&quot;,&#xd;
                    &quot;value&quot;: &quot;surel@mail.com&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;dmV1PrscKd2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;What is the Carbon Footprint of the farm or the dedicated supply chain&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;20&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ggkYN6NEvgV&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Do you have received training on Regenerative Agriculture Principles and Practices&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;kqIp6odZn6u&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Do you calculate your profit and loss&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;m3IBtjoizcx&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total Score&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;23.5&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mFHVVrbGO2p&quot;,&#xd;
                    &quot;fieldName&quot;: &quot; Is there any evidence to submit&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;moPU6mUzFB2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date Of The Data Collection&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${__time(yyyy-MM-dd)}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;pr7qgjQnW4a&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Do you monitor soil moisture or tree condition before applying irrigation&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;qjTzNlV4h5B&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Evidence Photo&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;qjTzNlV4h5B_${eventAddAllCrop}_${eventAddAllCrop}.jpg&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;r1nnQbYoDYw&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;What is the percentage of crop land with application of crop residues etc&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;rdvYpIsGc7W&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Interviewee&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;&quot;,&#xd;
                    &quot;value&quot;: &quot;rQGebeqQgQw&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;sPRoX8trUiw&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Do you apply mulch or grow cover crops on your land&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;skxNqurNDpE&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Are you applying chemical insecticides and or fungicides in your farm&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;wk661gAeZlv&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Regen AG - Farm Assessment All Crop UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddAllCrop}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;x2XPKD09YA4&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Is the Carbon Footprint of the farm or dedicated supply chain known&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/sync_event_kafka</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.status</stringProp>
              <stringProp name="EXPECTED_VALUE">true</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Send to mobile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">https://fx-node-1-staging.nestle.koltitrace.com/koltitrace-global/sync-data/send-to-mobile?ProgramUid=Ywc5PfwVbIZ&amp;ExtUid=${eventAddAllCrop}&amp;UserName=staging.nescafe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Download All Crop" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?DateTimeFilter=0&amp;UserName=staging.nescafe&amp;ProgramUid=Ywc5PfwVbIZ</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.rows.Ywc5PfwVbIZ[*].uid</stringProp>
              <stringProp name="EXPECTED_VALUE">${eventAddAllCrop}</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sync data Farm Info All Crop" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;events&quot;: [&#xd;
        {&#xd;
            &quot;coordinate&quot;: {&#xd;
                &quot;latitude&quot;: 0,&#xd;
                &quot;longitude&quot;: 0&#xd;
            },&#xd;
            &quot;created&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;eventDate&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;lastUpdated&quot;: &quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss)}.${__RandomString(3,1234567890)}&quot;,&#xd;
            &quot;orgUnit&quot;: &quot;&quot;,&#xd;
            &quot;program&quot;: &quot;lVaEId8ZIeC&quot;,&#xd;
            &quot;programName&quot;: &quot;Regen AG - Farm Info All Crop&quot;,&#xd;
            &quot;programStage&quot;: &quot;xdXeUK3563p&quot;,&#xd;
            &quot;status&quot;: &quot;COMPLETED&quot;,&#xd;
            &quot;action&quot;: &quot;TO_UPDATE&quot;,&#xd;
            &quot;event&quot;: &quot;${eventAddFarmInfAllCrop}&quot;,&#xd;
            &quot;dataValues&quot;: [&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Bjs2LWPKIJV&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Natural habitat and forest area&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;12&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BqSaN1kWCKu&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Enumerator&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;staging nescafe&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;EO3tzFsl1e3&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Reference field for soil organic matter&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;56&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;EWhlZN3yTNF&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Percentage organic fertiliser and total fertiliser&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;59.0164&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FYm3kTx9lAP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Interviewee Person_SINGLE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;gYRebqGqbqg&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FiZb9j3wLmg&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Corrective Actions&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;-&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FxjdrBCIljD&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity Name &quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;petani 20230214100323&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;GXeUJzouz0w&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Regen AG Farm Info All Crop UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddFarmInfAllCrop}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;HAl78CQNQqm&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Crop - Task&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;IXZ4Sv7bYl1&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total Animal All Crop&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;25&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;KCEATTSOcDi&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;GPS Location&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;POINT(-6.33351 106.850669)&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;MDhg8TnPV8z&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Summary - Yield&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;500&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;NXCDM1ptpIr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date of the data creation&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;P5rrZ7i3yWX&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Year of reporting&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2019&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PhvIZoAGgPr&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Comments&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;-&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PxAqZtpHo3c&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total Farm Area&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;39.00&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;RaDB9xCzAjz&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Summary - Water usage for processing&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;23&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;W8aQDcJZhg7&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Summary - Estimated profit or loss&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;299988&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Zs2UBJuN2pu&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Summary - Total synthetic fertiliser applied&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;25&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;aUsimcYn9CO&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Summary - Total water usage&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;23.11&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;adxhUCOBbJa&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Farm Area (Ha)&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;100&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ayd6Qh44yVU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddEntity}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;b3uB6kH01xV&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Certificates or Label Production&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;false&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;cH5MT4nZJle&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Year when farm was established&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1978&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;cLOmZKnpaIZ&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Arable crop land&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;42&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;cjG01xXhhCp&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Animal - Task&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;crx1340fed2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Email&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;surel@mail.com&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;hUmFmwEA0JP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Vendor Code or Business Partner ID of the farm&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;ven 001&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;i2U95qoJ38H&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Farm ownership&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;iSZLpw5OZXq&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Number of livestock&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;58&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;iWsaC8qeZm0&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Permanent pastures&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;21&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;icIVRaRFo98&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Permanent crop land&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;25&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;j0Mf37EfVL4&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Year of assessment&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2019&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;j5dlkFveJTH&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Regen AG - Farm Info All Crop completed&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;21&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;j6diWJrCHc5&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Name of Certificate or Label&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;okok&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;kFP8Go6sukt&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Summary - Income&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;300000&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;m4MUDRNOhYu&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Summary - Total organic fertiliser applied&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;36&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mFHVVrbGO2p&quot;,&#xd;
                    &quot;fieldName&quot;: &quot; Is there any evidence to submit&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mXioj53rzhq&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Altitude&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;75.6&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;mkkI7Tuwo4k&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Summary - Total fertiliser applied&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;61&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;moPU6mUzFB2&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Date Of The Data Collection&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${__time(yyyy-MM-dd)}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;omnW4ZVhnj8&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Summary - Water usage for irrigation&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;55&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;pBpQStrVoLB&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Address 1&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;jl. jauh bgt&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;qjTzNlV4h5B&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Evidence Photo&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;qjTzNlV4h5B_${eventAddFarmInfAllCrop}_${eventAddFarmInfAllCrop}.jpg&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;rdvYpIsGc7W&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Assesment Interviewee&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;gYRebqGqbqg&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;rg9TnPT2XRT&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Summary - Synthetic Fertilizer Productivity_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;20&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;sbeKVPOXM2t&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;UOM_1675136914_Total Farm Area&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;98&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ulLGAsgctST&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Percentage of Soil Organic Matter in referenced field&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;10&quot;&#xd;
                }&#xd;
            ]&#xd;
        },&#xd;
        {&#xd;
            &quot;coordinate&quot;: {&#xd;
                &quot;latitude&quot;: 0,&#xd;
                &quot;longitude&quot;: 0&#xd;
            },&#xd;
            &quot;created&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;eventDate&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;lastUpdated&quot;: &quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss)}.${__RandomString(3,1234567890)}&quot;,&#xd;
            &quot;orgUnit&quot;: &quot;&quot;,&#xd;
            &quot;program&quot;: &quot;dMRwAtnEWnE&quot;,&#xd;
            &quot;programName&quot;: &quot;Crops _HIDE&quot;,&#xd;
            &quot;programStage&quot;: &quot;I9aMtzFD8rj&quot;,&#xd;
            &quot;status&quot;: &quot;COMPLETED&quot;,&#xd;
            &quot;action&quot;: &quot;TO_UPDATE&quot;,&#xd;
            &quot;event&quot;: &quot;${eventAddCropHide}&quot;,&#xd;
            &quot;dataValues&quot;: [&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BwxnzLctPEp&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Income USD per year&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;300000&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;DqJtMxXeUMC&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Crop Supplied to Nestle&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;E5V7u1CoIvW&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Average production cost USD per year&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;12&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ENxUPQjCgcv&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Regen AG Farm Info All Crop - task Crops UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddCropHide}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;GXeUJzouz0w&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Regen AG Farm Info All Crop UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddFarmInfAllCrop}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;H0vSLDtfR72&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Age of perennial crops per years&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;12&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;HhOjG18QZRM&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Percentage organic fertiliser vs total fertiliser Crop All Crop&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;59.01639&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Izkbc8ehPmU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Number of applications of synthetic pesticide&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;74&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;StfVMW1Mcnz&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Water usage for processing&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;23&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;T9v18ToTmKA&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Synthetic Fertilizer Productivity All Crop_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;20&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;TjnbUVuoBM8&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Estimated profit or loss&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;299988&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;XKbp94mXB5l&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Yield kg per ha per yr&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;500&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;adxhUCOBbJa&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Farm Area (Ha)&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;60&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ayd6Qh44yVU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddEntity}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;l3H9gqzFtpF&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Water usage for irrigation&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;55&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;oD3QnZIb02y&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total fertiliser applied&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;61&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;pe8Uw3H7XCE&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Crop for NC NN&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;8&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;qVL1tGTRbYm&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Average sales price&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;10&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;qdyozLdylmP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total organic fertiliser applied&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;36&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;rVIoyFDyBww&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total water usage&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;23.11&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;xk52jOdp5mS&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Total synthetic fertiliser applied&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;25&quot;&#xd;
                }&#xd;
            ]&#xd;
        },&#xd;
        {&#xd;
            &quot;coordinate&quot;: {&#xd;
                &quot;latitude&quot;: 0,&#xd;
                &quot;longitude&quot;: 0&#xd;
            },&#xd;
            &quot;created&quot;: &quot;2023-02-15 10:04:15&quot;,&#xd;
            &quot;eventDate&quot;: &quot;2023-02-15 10:04:15&quot;,&#xd;
            &quot;lastUpdated&quot;: &quot;2023-02-15T10:04:29.231&quot;,&#xd;
            &quot;orgUnit&quot;: &quot;&quot;,&#xd;
            &quot;program&quot;: &quot;P2Za4OdnxBw&quot;,&#xd;
            &quot;programName&quot;: &quot;Animals _HIDE&quot;,&#xd;
            &quot;programStage&quot;: &quot;lHVZvxrETX7&quot;,&#xd;
            &quot;status&quot;: &quot;COMPLETED&quot;,&#xd;
            &quot;action&quot;: &quot;TO_UPDATE&quot;,&#xd;
            &quot;event&quot;: &quot;${eventAddAnimals}&quot;,&#xd;
            &quot;dataValues&quot;: [&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;BVnJ4Tj51iK&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Animal Type All Crop&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;8&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;DVdXasju8nO&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Regen Ag Farm Info All Crop Animals UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddAnimals}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;GXeUJzouz0w&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Regen AG Farm Info All Crop UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddFarmInfAllCrop}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PK6J9bO1kXI&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Animals All Crop ID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1676430255724&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ayd6Qh44yVU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddEntity}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;dH15AUk53ng&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Standard Livestock Units&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;25&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/sync_event_kafka</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.status</stringProp>
              <stringProp name="EXPECTED_VALUE">true</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Send to mobile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?ProgramUid=lVaEId8ZIeC;dMRwAtnEWnE;P2Za4OdnxBw&amp;ExtUid=${eventAddFarmInfAllCrop}&amp;UserName=staging.nescafe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Download Farm Info All Crop" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?DateTimeFilter=0&amp;UserName=staging.nescafe&amp;ProgramUid=lVaEId8ZIeC</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.rows.lVaEId8ZIeC[*].uid</stringProp>
              <stringProp name="EXPECTED_VALUE">${eventAddFarmInfAllCrop}</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add group" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">target</stringProp>
                <stringProp name="Header.value">devel</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sender</stringProp>
                <stringProp name="Header.value">mqtt:com.koltiva.datacollection.neo-live-fa.jakselneo1-192b0662-79ba-4f20-bc52-a55685ecc92d|fcm</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">appName</stringProp>
                <stringProp name="Header.value">live</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">token</stringProp>
                <stringProp name="Header.value">${IdToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sync data" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;events&quot;: [&#xd;
        {&#xd;
            &quot;coordinate&quot;: {&#xd;
                &quot;latitude&quot;: 0,&#xd;
                &quot;longitude&quot;: 0&#xd;
            },&#xd;
            &quot;created&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;eventDate&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;lastUpdated&quot;: &quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss)}.${__RandomString(3,1234567890)}&quot;,&#xd;
            &quot;orgUnit&quot;: &quot;&quot;,&#xd;
            &quot;program&quot;: &quot;QDVit9tta6Z&quot;,&#xd;
            &quot;programName&quot;: &quot;Entity Group&quot;,&#xd;
            &quot;programStage&quot;: &quot;HVOH7XEN1op&quot;,&#xd;
            &quot;status&quot;: &quot;COMPLETED&quot;,&#xd;
            &quot;action&quot;: &quot;TO_UPDATE&quot;,&#xd;
            &quot;event&quot;: &quot;${eventAddGroup}&quot;,&#xd;
            &quot;dataValues&quot;: [&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;CoDYwqFYuha&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Group _SINGLE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;DYbNOzQ4l3C&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;L2laSMKOqra&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity Group UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddGroup}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ayd6Qh44yVU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddEntity}&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/sync_event_kafka</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.status</stringProp>
              <stringProp name="EXPECTED_VALUE">true</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Send to mobile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?ProgramUid=fcZn70WQSqh&amp;ExtUid=${eventAddActionPlan}&amp;UserName=staging.nescafe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Download" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?DateTimeFilter=0&amp;UserName=staging.nescafe&amp;ProgramUid=QDVit9tta6Z</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.rows.QDVit9tta6Z[*].uid</stringProp>
              <stringProp name="EXPECTED_VALUE">${eventAddGroup}</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add plantlets" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">target</stringProp>
                <stringProp name="Header.value">devel</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sender</stringProp>
                <stringProp name="Header.value">mqtt:com.koltiva.datacollection.neo-live-fa.jakselneo1-192b0662-79ba-4f20-bc52-a55685ecc92d|fcm</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">appName</stringProp>
                <stringProp name="Header.value">live</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">token</stringProp>
                <stringProp name="Header.value">${IdToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sync data" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;events&quot;: [&#xd;
        {&#xd;
            &quot;coordinate&quot;: {&#xd;
                &quot;latitude&quot;: 0,&#xd;
                &quot;longitude&quot;: 0&#xd;
            },&#xd;
            &quot;created&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;eventDate&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;lastUpdated&quot;: &quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss)}.${__RandomString(3,1234567890)}&quot;,&#xd;
            &quot;orgUnit&quot;: &quot;&quot;,&#xd;
            &quot;program&quot;: &quot;OhwQL9W1KTE&quot;,&#xd;
            &quot;programName&quot;: &quot;Plantlets&quot;,&#xd;
            &quot;programStage&quot;: &quot;nEw037EfVK2&quot;,&#xd;
            &quot;status&quot;: &quot;COMPLETED&quot;,&#xd;
            &quot;action&quot;: &quot;TO_UPDATE&quot;,&#xd;
            &quot;event&quot;: &quot;${eventAddPlantlets}&quot;,&#xd;
            &quot;dataValues&quot;: [&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;AWvsQMOiClz&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;GET BU Nescafe_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;true&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;G10noTpYv19&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Reference ID&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;ref-001&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;GeLaig8RdgM&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Plantlets ID&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1675328998980&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;Jlcc7U2S5rs&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Receiving Entity _SINGLE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;Y9xsShC1EpR&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;KkQmQdkfvRI&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Plantlets UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddPlantlets}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;O3jLOlTxlCb&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;GET BU Dairy_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;false&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;R0GFFKmlGuY&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Number of Plantlets Sent&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;300&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;TO9K7PZRMHE&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Currency&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;TgaknYEMzgH&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Sent Date&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2023-02-02&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;angq4aZywfK&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Number of Plantlets Distributed&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;300&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ayd6Qh44yVU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddEntity}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;bWHhR1aig7K&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Propagation Method&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;hX0Cvn3jICx&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Sending Entity _SINGLE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddEntity}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;kDDIfIIUNIj&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity Type&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;kgVM7HxlnUy&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Variety _FILTERBYKEY_business_unit&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;004008228&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;lVZEHYm1dxj&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Price&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;3000000&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;lYqOG19UqaG&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;GET BU Nespresso_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;false&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;oiT5mUyCx0z&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Species _FILTERBYKEY_business_unit&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;004008&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;qUFcC0DwrLz&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Delivery Signature&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;qUFcC0DwrLz_${eventAddPlantlets}_${eventAddPlantlets}.jpg&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;qXWqTizd4Gx&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Commodity on Plot _FILTERBYKEY_commodity_business_unit&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;004&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;sYRQdiUACM5&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Status of Plantlet&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;1&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/sync_event_kafka</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.status</stringProp>
              <stringProp name="EXPECTED_VALUE">true</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Send to mobile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?ProgramUid=fcZn70WQSqh&amp;ExtUid=${eventAddActionPlan}&amp;UserName=staging.nescafe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Download" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?DateTimeFilter=0&amp;UserName=staging.nescafe&amp;ProgramUid=OhwQL9W1KTE</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.rows.OhwQL9W1KTE[*].uid</stringProp>
              <stringProp name="EXPECTED_VALUE">${eventAddPlantlets}</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add interactions" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">target</stringProp>
                <stringProp name="Header.value">devel</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sender</stringProp>
                <stringProp name="Header.value">mqtt:com.koltiva.datacollection.neo-live-fa.jakselneo1-192b0662-79ba-4f20-bc52-a55685ecc92d|fcm</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">appName</stringProp>
                <stringProp name="Header.value">live</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">token</stringProp>
                <stringProp name="Header.value">${IdToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sync data" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;events&quot;: [&#xd;
        {&#xd;
            &quot;coordinate&quot;: {&#xd;
                &quot;latitude&quot;: 0,&#xd;
                &quot;longitude&quot;: 0&#xd;
            },&#xd;
            &quot;created&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;eventDate&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;lastUpdated&quot;: &quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss)}.${__RandomString(3,1234567890)}&quot;,&#xd;
            &quot;orgUnit&quot;: &quot;&quot;,&#xd;
            &quot;program&quot;: &quot;vFknbQDcJYh&quot;,&#xd;
            &quot;programName&quot;: &quot;Event &amp; Interactions&quot;,&#xd;
            &quot;programStage&quot;: &quot;aBhnguJhPlR&quot;,&#xd;
            &quot;status&quot;: &quot;COMPLETED&quot;,&#xd;
            &quot;action&quot;: &quot;TO_UPDATE&quot;,&#xd;
            &quot;event&quot;: &quot;${eventAddInteraction}&quot;,&#xd;
            &quot;dataValues&quot;: [&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;D8lGsPFveLd&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Subject&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;test subj&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;DHWaC6kFsQP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Type of Interaction&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FtSUvxqBGdA&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Organizer&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;staging nescafe&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;GHJczsEQI3A&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Attachment File&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;GHJczsEQI3A_${eventAddInteraction}_${eventAddInteraction}.jpg&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;GhRwAtoCSUv&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Start Date&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${__time(yyyy-MM-dd)}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PqZCA4fzjWI&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Start Time - Interaction&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${__time(hh:mm:ss)}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ThhBjt8oW2O&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Participant&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;bRWGWeRtqrq&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;U8lDijLMf35&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Description&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;test desc&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;UEGWbIVVrcL&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity Event Interaction UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddInteraction}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;UlxLfAfgG8g&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Topic&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;002016046,002016105,002016113&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ayd6Qh44yVU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddEntity}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;dzVPObeIMol&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;End Date&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${__timeShift(yyyy-MM-dd,,P2D,,)}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;jxwiYVfhKNk&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;End Time - Interaction&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${__timeShift(HH:mm:ss,,PT1H,,)}&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/sync_event_kafka</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.status</stringProp>
              <stringProp name="EXPECTED_VALUE">true</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Send to mobile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?ProgramUid=vFknbQDcJYh&amp;ExtUid=${eventAddInteraction}&amp;UserName=staging.nescafe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Download" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/send-to-mobile?DateTimeFilter=0&amp;UserName=staging.nescafe&amp;ProgramUid=vFknbQDcJYh</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.success</stringProp>
              <stringProp name="EXPECTED_VALUE">1</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.rows.vFknbQDcJYh[*].uid</stringProp>
              <stringProp name="EXPECTED_VALUE">${eventAddInteraction}</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Event management" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">target</stringProp>
                <stringProp name="Header.value">devel</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sender</stringProp>
                <stringProp name="Header.value">mqtt:com.koltiva.datacollection.neo-live-fa.jakselneo1-192b0662-79ba-4f20-bc52-a55685ecc92d|fcm</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">appName</stringProp>
                <stringProp name="Header.value">live</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">token</stringProp>
                <stringProp name="Header.value">${IdToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Download event" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;events&quot;: [&#xd;
        {&#xd;
            &quot;coordinate&quot;: {&#xd;
                &quot;latitude&quot;: 0,&#xd;
                &quot;longitude&quot;: 0&#xd;
            },&#xd;
            &quot;created&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;eventDate&quot;: &quot;${__time(yyyy-MM-dd hh:mm:ss)}&quot;,&#xd;
            &quot;lastUpdated&quot;: &quot;${__time(yyyy-MM-dd)}T${__time(hh:mm:ss)}.${__RandomString(3,1234567890)}&quot;,&#xd;
            &quot;orgUnit&quot;: &quot;&quot;,&#xd;
            &quot;program&quot;: &quot;vFknbQDcJYh&quot;,&#xd;
            &quot;programName&quot;: &quot;Event &amp; Interactions&quot;,&#xd;
            &quot;programStage&quot;: &quot;aBhnguJhPlR&quot;,&#xd;
            &quot;status&quot;: &quot;COMPLETED&quot;,&#xd;
            &quot;action&quot;: &quot;TO_UPDATE&quot;,&#xd;
            &quot;event&quot;: &quot;${eventAddInteraction}&quot;,&#xd;
            &quot;dataValues&quot;: [&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;D8lGsPFveLd&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Subject&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;test subj&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;DHWaC6kFsQP&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Type of Interaction&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;FtSUvxqBGdA&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Organizer&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;staging nescafe&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;GHJczsEQI3A&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Attachment File&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;GHJczsEQI3A_${eventAddInteraction}_${eventAddInteraction}.jpg&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;GhRwAtoCSUv&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Start Date&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${__time(yyyy-MM-dd)}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;PqZCA4fzjWI&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Start Time - Interaction&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${__time(hh:mm:ss)}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ThhBjt8oW2O&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Participant&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;bRWGWeRtqrq&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;U8lDijLMf35&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Description&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;test desc&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;UEGWbIVVrcL&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity Event Interaction UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddInteraction}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;UlxLfAfgG8g&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Topic&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;002016046,002016105,002016113&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;ayd6Qh44yVU&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;Entity UID_HIDE&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${eventAddEntity}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;dzVPObeIMol&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;End Date&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${__timeShift(yyyy-MM-dd,,P2D,,)}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;dataElement&quot;: &quot;jxwiYVfhKNk&quot;,&#xd;
                    &quot;fieldName&quot;: &quot;End Time - Interaction&quot;,&#xd;
                    &quot;storedBy&quot;: &quot;staging.nescafe&quot;,&#xd;
                    &quot;value&quot;: &quot;${__timeShift(HH:mm:ss,,PT1H,,)}&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/farmer-training/download?username=staging.nescafe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..success</stringProp>
              <stringProp name="EXPECTED_VALUE">true</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sync upload training" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${__base64Encode({&#xd;
   &quot;training_status&quot;: &quot;1&quot;\,&#xd;
   &quot;file_timestamp&quot;: &quot;1676866142489&quot;\,&#xd;
   &quot;username&quot;: &quot;staging.nescafe&quot;\,&#xd;
   &quot;remark&quot;: &quot;okokokok&quot;\,&#xd;
   &quot;training_uid&quot;: &quot;${eventAddTraining}&quot;\,&#xd;
   &quot;sender&quot;: &quot;com.koltitrace.nestle-demo-staging.nescafe-582dd3ae-e0e9-4eba-bbae-6c7b1d5d8d16&quot;\,&#xd;
   &quot;time_start&quot;: &quot;11:08:00&quot;\,&#xd;
   &quot;subcluster_id&quot;: &quot;1608001&quot;\,&#xd;
   &quot;training_type&quot;: &quot;2&quot;\,&#xd;
   &quot;cluster_id&quot;: &quot;1608&quot;\,&#xd;
   &quot;training_topic_id&quot;: &quot;002016080\,002016046&quot;\,&#xd;
   &quot;country_id&quot;: &quot;16&quot;\,&#xd;
   &quot;time_end&quot;: &quot;12:08:00&quot;\,&#xd;
   &quot;province_id&quot;: &quot;1609&quot;\,&#xd;
   &quot;district_id&quot;: &quot;16090001&quot;\,&#xd;
   &quot;date_start&quot;: &quot;2023-03-20&quot;\,&#xd;
   &quot;event_type&quot;: &quot;1&quot;\,&#xd;
   &quot;date_end&quot;: &quot;2023-03-20&quot;\,&#xd;
   &quot;event_id&quot;: &quot;kkkk1&quot;\,&#xd;
   &quot;non_existing_farmer&quot;: []\,&#xd;
   &quot;participant_list&quot;: [&#xd;
      {&#xd;
         &quot;type_participant&quot;: &quot;Registered&quot;\,&#xd;
         &quot;participant_uid&quot;: &quot;${participantUid}&quot;\,&#xd;
         &quot;participant_name&quot;: &quot;first 20230214110747 last tanggal-jam&quot;\,&#xd;
         &quot;using_subs&quot;: &quot;No&quot;\,&#xd;
         &quot;subs_from&quot;: &quot;&quot;\,&#xd;
         &quot;subs_name&quot;: &quot;&quot;\,&#xd;
         &quot;subs_uid&quot;: &quot;&quot;\,&#xd;
         &quot;entity_uid&quot;: &quot;${eventAddEntity}&quot;\,&#xd;
         &quot;entity_name&quot;: &quot;&quot;\,&#xd;
         &quot;entity_display_id&quot;: &quot;&quot;\,&#xd;
         &quot;nonregistered_fist_name&quot;: &quot;&quot;\,&#xd;
         &quot;nonregistered_last_name&quot;: &quot;&quot;\,&#xd;
         &quot;nonregistered_gender&quot;: &quot;&quot;\,&#xd;
         &quot;nonregistered_birthyear&quot;: &quot;&quot;\,&#xd;
         &quot;nonregistered_address&quot;: &quot;&quot;\,&#xd;
         &quot;pre_test&quot;: &quot;&quot;\,&#xd;
         &quot;post_test&quot;: &quot;&quot;\,&#xd;
         &quot;advice_someone&quot;: &quot;&quot;\,&#xd;
         &quot;apply_learned&quot;: &quot;&quot;\,&#xd;
         &quot;change_training&quot;: &quot;&quot;\,&#xd;
         &quot;implement_practice&quot;: &quot;&quot;\,&#xd;
         &quot;date_collection&quot;: &quot;&quot;\,&#xd;
         &quot;status_code&quot;: &quot;active&quot;&#xd;
      }&#xd;
   ]\,&#xd;
   &quot;attendance_data&quot;: [&#xd;
      {&#xd;
         &quot;day&quot;: &quot;1&quot;\,&#xd;
         &quot;attendances&quot;: [&#xd;
            {&#xd;
               &quot;type_participant&quot;: &quot;Registered&quot;\,&#xd;
               &quot;participant_uid&quot;: &quot;${participantUid}&quot;\,&#xd;
               &quot;status&quot;: &quot;null&quot;&#xd;
            }&#xd;
         ]&#xd;
      }&#xd;
   ]&#xd;
},)}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/sync_upload_training</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.status</stringProp>
              <stringProp name="EXPECTED_VALUE">true</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sync upload training" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${__base64Encode({&#xd;
   &quot;training_status&quot;: &quot;1&quot;\,&#xd;
   &quot;file_timestamp&quot;: &quot;${timestamp}&quot;\,&#xd;
   &quot;username&quot;: &quot;staging.nescafe&quot;\,&#xd;
   &quot;remark&quot;: &quot;test remark&quot;\,&#xd;
   &quot;training_uid&quot;: &quot;${eventAddTraining}&quot;\,&#xd;
   &quot;sender&quot;: &quot;com.koltitrace.nestle-demo-staging.nescafe-582dd3ae-e0e9-4eba-bbae-6c7b1d5d8d16&quot;\,&#xd;
   &quot;time_start&quot;: &quot;09:07:00&quot;\,&#xd;
   &quot;subcluster_id&quot;: &quot;1608001&quot;\,&#xd;
   &quot;training_type&quot;: &quot;1&quot;\,&#xd;
   &quot;cluster_id&quot;: &quot;1608&quot;\,&#xd;
   &quot;training_topic_id&quot;: &quot;002016046\,002016080&quot;\,&#xd;
   &quot;country_id&quot;: &quot;16&quot;\,&#xd;
   &quot;time_end&quot;: &quot;13:07:00&quot;\,&#xd;
   &quot;province_id&quot;: &quot;1609&quot;\,&#xd;
   &quot;district_id&quot;: &quot;16090001&quot;\,&#xd;
   &quot;date_start&quot;: &quot;2023-02-20&quot;\,&#xd;
   &quot;event_type&quot;: &quot;1&quot;\,&#xd;
   &quot;date_end&quot;: &quot;2023-02-22&quot;\,&#xd;
   &quot;event_id&quot;: &quot;222221&quot;\,&#xd;
   &quot;non_existing_farmer&quot;: []\,&#xd;
   &quot;participant_list&quot;: [&#xd;
      {&#xd;
         &quot;type_participant&quot;: &quot;Registered&quot;\,&#xd;
         &quot;participant_uid&quot;: &quot;${participantUid}&quot;\,&#xd;
         &quot;participant_name&quot;: &quot;first 20230214110747 last tanggal-jam&quot;\,&#xd;
         &quot;using_subs&quot;: &quot;No&quot;\,&#xd;
         &quot;subs_from&quot;: &quot;&quot;\,&#xd;
         &quot;subs_name&quot;: &quot;&quot;\,&#xd;
         &quot;subs_uid&quot;: &quot;&quot;\,&#xd;
         &quot;entity_uid&quot;: &quot;${eventAddEntity}&quot;\,&#xd;
         &quot;entity_name&quot;: &quot;&quot;\,&#xd;
         &quot;entity_display_id&quot;: &quot;&quot;\,&#xd;
         &quot;nonregistered_fist_name&quot;: &quot;&quot;\,&#xd;
         &quot;nonregistered_last_name&quot;: &quot;&quot;\,&#xd;
         &quot;nonregistered_gender&quot;: &quot;&quot;\,&#xd;
         &quot;nonregistered_birthyear&quot;: &quot;&quot;\,&#xd;
         &quot;nonregistered_address&quot;: &quot;&quot;\,&#xd;
         &quot;pre_test&quot;: &quot;&quot;\,&#xd;
         &quot;post_test&quot;: &quot;&quot;\,&#xd;
         &quot;advice_someone&quot;: &quot;&quot;\,&#xd;
         &quot;apply_learned&quot;: &quot;&quot;\,&#xd;
         &quot;change_training&quot;: &quot;&quot;\,&#xd;
         &quot;implement_practice&quot;: &quot;&quot;\,&#xd;
         &quot;date_collection&quot;: &quot;&quot;\,&#xd;
         &quot;status_code&quot;: &quot;active&quot;&#xd;
      }&#xd;
   ]\,&#xd;
   &quot;attendance_data&quot;: [&#xd;
      {&#xd;
         &quot;day&quot;: &quot;1&quot;\,&#xd;
         &quot;attendances&quot;: [&#xd;
            {&#xd;
               &quot;type_participant&quot;: &quot;Registered&quot;\,&#xd;
               &quot;participant_uid&quot;: &quot;${participantUid}&quot;\,&#xd;
               &quot;status&quot;: &quot;null&quot;&#xd;
            }&#xd;
         ]&#xd;
      }\,&#xd;
      {&#xd;
         &quot;day&quot;: &quot;2&quot;\,&#xd;
         &quot;attendances&quot;: [&#xd;
            {&#xd;
               &quot;type_participant&quot;: &quot;Registered&quot;\,&#xd;
               &quot;participant_uid&quot;: &quot;${participantUid}&quot;\,&#xd;
               &quot;status&quot;: &quot;null&quot;&#xd;
            }&#xd;
         ]&#xd;
      }\,&#xd;
      {&#xd;
         &quot;day&quot;: &quot;3&quot;\,&#xd;
         &quot;attendances&quot;: [&#xd;
            {&#xd;
               &quot;type_participant&quot;: &quot;Registered&quot;\,&#xd;
               &quot;participant_uid&quot;: &quot;${participantUid}&quot;\,&#xd;
               &quot;status&quot;: &quot;null&quot;&#xd;
            }&#xd;
         ]&#xd;
      }&#xd;
   ]&#xd;
},)}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/sync_upload_training</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.status</stringProp>
              <stringProp name="EXPECTED_VALUE">true</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sync upload training doc" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${__base64Encode(${__FileToString(/Users/sigit.apri/Documents/MyDoc/${__eval(${upload-data-training-20230218200851})}.json,,)},)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">koltitrace-global/sync-data/sync_upload_training</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.status</stringProp>
              <stringProp name="EXPECTED_VALUE">true</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Training status" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;training&quot;: [&#xd;
        {&#xd;
            &quot;training_id&quot;: &quot;${eventAddTraining}&quot;,&#xd;
            &quot;sync_time&quot;: 0,&#xd;
            &quot;file_names&quot;: &quot;&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">staging.nestle.koltitrace.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/index.php/data_adm/sync_data/gettrainingstatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="false">
              <stringProp name="JSON_PATH">$.training[0].status</stringProp>
              <stringProp name="EXPECTED_VALUE">synced</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">20000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">3000</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">kasirdemo.belajarqa.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
